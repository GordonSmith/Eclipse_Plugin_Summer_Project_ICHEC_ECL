/*
 * generated by Xtext
 */
package org.xtext.hipie.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.hipie.services.HIPIEGrammarAccess;

public class HIPIEParser extends AbstractContentAssistParser {
	
	@Inject
	private HIPIEGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.hipie.ui.contentassist.antlr.internal.InternalHIPIEParser createParser() {
		org.xtext.hipie.ui.contentassist.antlr.internal.InternalHIPIEParser result = new org.xtext.hipie.ui.contentassist.antlr.internal.InternalHIPIEParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBase_propAccess().getAlternatives(), "rule__Base_prop__Alternatives");
					put(grammarAccess.getBase_propAccess().getAlternatives_0_0(), "rule__Base_prop__Alternatives_0_0");
					put(grammarAccess.getCategory_typeAccess().getAlternatives(), "rule__Category_type__Alternatives");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getEnum_declAccess().getAlternatives_2(), "rule__Enum_decl__Alternatives_2");
					put(grammarAccess.getInput_valueAccess().getAlternatives(), "rule__Input_value__Alternatives");
					put(grammarAccess.getInput_valueAccess().getAlternatives_0_0(), "rule__Input_value__Alternatives_0_0");
					put(grammarAccess.getInput_optionAccess().getAlternatives(), "rule__Input_option__Alternatives");
					put(grammarAccess.getInput_optionAccess().getAlternatives_0(), "rule__Input_option__Alternatives_0");
					put(grammarAccess.getInput_optionAccess().getAlternatives_4_0(), "rule__Input_option__Alternatives_4_0");
					put(grammarAccess.getFormfield_optionAccess().getAlternatives(), "rule__Formfield_option__Alternatives");
					put(grammarAccess.getInputtype_optionAccess().getAlternatives(), "rule__Inputtype_option__Alternatives");
					put(grammarAccess.getOutfield_declAccess().getAlternatives_0(), "rule__Outfield_decl__Alternatives_0");
					put(grammarAccess.getEclfield_typeAccess().getAlternatives(), "rule__Eclfield_type__Alternatives");
					put(grammarAccess.getEclfield_typeAccess().getAlternatives_0_0(), "rule__Eclfield_type__Alternatives_0_0");
					put(grammarAccess.getEclfield_typeAccess().getAlternatives_1(), "rule__Eclfield_type__Alternatives_1");
					put(grammarAccess.getOutput_optionAccess().getAlternatives(), "rule__Output_option__Alternatives");
					put(grammarAccess.getOutput_optionAccess().getAlternatives_0(), "rule__Output_option__Alternatives_0");
					put(grammarAccess.getOutput_valueAccess().getAlternatives(), "rule__Output_value__Alternatives");
					put(grammarAccess.getOutput_valueAccess().getAlternatives_0_0(), "rule__Output_value__Alternatives_0_0");
					put(grammarAccess.getGenerate_bodyAccess().getAlternatives(), "rule__Generate_body__Alternatives");
					put(grammarAccess.getGenerate_bodyAccess().getAlternatives_0_1(), "rule__Generate_body__Alternatives_0_1");
					put(grammarAccess.getGenerate_bodyAccess().getAlternatives_1_5(), "rule__Generate_body__Alternatives_1_5");
					put(grammarAccess.getVisualizationAccess().getAlternatives(), "rule__Visualization__Alternatives");
					put(grammarAccess.getVisualizationAccess().getAlternatives_0_0(), "rule__Visualization__Alternatives_0_0");
					put(grammarAccess.getFunctionAccess().getAlternatives(), "rule__Function__Alternatives");
					put(grammarAccess.getVisual_optionAccess().getAlternatives(), "rule__Visual_option__Alternatives");
					put(grammarAccess.getVisual_optionAccess().getAlternatives_0_0(), "rule__Visual_option__Alternatives_0_0");
					put(grammarAccess.getVisual_multivalAccess().getAlternatives(), "rule__Visual_multival__Alternatives");
					put(grammarAccess.getResource_optionAccess().getAlternatives_0(), "rule__Resource_option__Alternatives_0");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getBase_propAccess().getGroup_0(), "rule__Base_prop__Group_0__0");
					put(grammarAccess.getBase_propAccess().getGroup_1(), "rule__Base_prop__Group_1__0");
					put(grammarAccess.getCategory_type_listAccess().getGroup(), "rule__Category_type_list__Group__0");
					put(grammarAccess.getCategory_type_listAccess().getGroup_1(), "rule__Category_type_list__Group_1__0");
					put(grammarAccess.getValue_listAccess().getGroup(), "rule__Value_list__Group__0");
					put(grammarAccess.getValue_listAccess().getGroup_1(), "rule__Value_list__Group_1__0");
					put(grammarAccess.getToken_listAccess().getGroup(), "rule__Token_list__Group__0");
					put(grammarAccess.getToken_listAccess().getGroup_1(), "rule__Token_list__Group_1__0");
					put(grammarAccess.getAssignAccess().getGroup(), "rule__Assign__Group__0");
					put(grammarAccess.getAssign_listAccess().getGroup(), "rule__Assign_list__Group__0");
					put(grammarAccess.getAssign_listAccess().getGroup_1(), "rule__Assign_list__Group_1__0");
					put(grammarAccess.getComposition_headerAccess().getGroup(), "rule__Composition_header__Group__0");
					put(grammarAccess.getContract_instanceAccess().getGroup(), "rule__Contract_instance__Group__0");
					put(grammarAccess.getContract_instanceAccess().getGroup_1(), "rule__Contract_instance__Group_1__0");
					put(grammarAccess.getField_declAccess().getGroup(), "rule__Field_decl__Group__0");
					put(grammarAccess.getEnum_declAccess().getGroup(), "rule__Enum_decl__Group__0");
					put(grammarAccess.getInput_sectionAccess().getGroup(), "rule__Input_section__Group__0");
					put(grammarAccess.getInput_valueAccess().getGroup_0(), "rule__Input_value__Group_0__0");
					put(grammarAccess.getInput_valueAccess().getGroup_1(), "rule__Input_value__Group_1__0");
					put(grammarAccess.getInput_valueAccess().getGroup_2(), "rule__Input_value__Group_2__0");
					put(grammarAccess.getInput_optionsAccess().getGroup(), "rule__Input_options__Group__0");
					put(grammarAccess.getInput_optionsAccess().getGroup_2(), "rule__Input_options__Group_2__0");
					put(grammarAccess.getInput_optionAccess().getGroup_1(), "rule__Input_option__Group_1__0");
					put(grammarAccess.getInput_optionAccess().getGroup_2(), "rule__Input_option__Group_2__0");
					put(grammarAccess.getInput_optionAccess().getGroup_3(), "rule__Input_option__Group_3__0");
					put(grammarAccess.getInput_optionAccess().getGroup_4(), "rule__Input_option__Group_4__0");
					put(grammarAccess.getInputtype_optionsAccess().getGroup(), "rule__Inputtype_options__Group__0");
					put(grammarAccess.getInputtype_optionsAccess().getGroup_1(), "rule__Inputtype_options__Group_1__0");
					put(grammarAccess.getOutput_sectionAccess().getGroup(), "rule__Output_section__Group__0");
					put(grammarAccess.getOutfield_declAccess().getGroup(), "rule__Outfield_decl__Group__0");
					put(grammarAccess.getEclfield_typeAccess().getGroup_0(), "rule__Eclfield_type__Group_0__0");
					put(grammarAccess.getEcloutput_declAccess().getGroup(), "rule__Ecloutput_decl__Group__0");
					put(grammarAccess.getOutput_optionAccess().getGroup_1(), "rule__Output_option__Group_1__0");
					put(grammarAccess.getOutput_optionAccess().getGroup_2(), "rule__Output_option__Group_2__0");
					put(grammarAccess.getOutput_optionsAccess().getGroup(), "rule__Output_options__Group__0");
					put(grammarAccess.getOutput_optionsAccess().getGroup_2(), "rule__Output_options__Group_2__0");
					put(grammarAccess.getOutput_valueAccess().getGroup_0(), "rule__Output_value__Group_0__0");
					put(grammarAccess.getOutput_valueAccess().getGroup_1(), "rule__Output_value__Group_1__0");
					put(grammarAccess.getOutput_valueAccess().getGroup_2(), "rule__Output_value__Group_2__0");
					put(grammarAccess.getOutput_baseAccess().getGroup(), "rule__Output_base__Group__0");
					put(grammarAccess.getGenerate_sectionAccess().getGroup(), "rule__Generate_section__Group__0");
					put(grammarAccess.getGenerate_bodyAccess().getGroup_0(), "rule__Generate_body__Group_0__0");
					put(grammarAccess.getGenerate_bodyAccess().getGroup_1(), "rule__Generate_body__Group_1__0");
					put(grammarAccess.getVisual_sectionAccess().getGroup(), "rule__Visual_section__Group__0");
					put(grammarAccess.getVisualizationAccess().getGroup_0(), "rule__Visualization__Group_0__0");
					put(grammarAccess.getVisualizationAccess().getGroup_1(), "rule__Visualization__Group_1__0");
					put(grammarAccess.getVis_basisAccess().getGroup(), "rule__Vis_basis__Group__0");
					put(grammarAccess.getVis_basis_qualifiersAccess().getGroup(), "rule__Vis_basis_qualifiers__Group__0");
					put(grammarAccess.getVis_basis_qualifiersAccess().getGroup_2(), "rule__Vis_basis_qualifiers__Group_2__0");
					put(grammarAccess.getFunctionAccess().getGroup_1(), "rule__Function__Group_1__0");
					put(grammarAccess.getFunctionAccess().getGroup_2(), "rule__Function__Group_2__0");
					put(grammarAccess.getVisual_section_optionsAccess().getGroup(), "rule__Visual_section_options__Group__0");
					put(grammarAccess.getVisual_section_optionsAccess().getGroup_2(), "rule__Visual_section_options__Group_2__0");
					put(grammarAccess.getVisual_section_optionAccess().getGroup(), "rule__Visual_section_option__Group__0");
					put(grammarAccess.getVisual_optionsAccess().getGroup(), "rule__Visual_options__Group__0");
					put(grammarAccess.getVisual_optionsAccess().getGroup_2(), "rule__Visual_options__Group_2__0");
					put(grammarAccess.getVisual_optionAccess().getGroup_0(), "rule__Visual_option__Group_0__0");
					put(grammarAccess.getVisual_optionAccess().getGroup_1(), "rule__Visual_option__Group_1__0");
					put(grammarAccess.getVisual_optionAccess().getGroup_1_3(), "rule__Visual_option__Group_1_3__0");
					put(grammarAccess.getVisual_optionAccess().getGroup_2(), "rule__Visual_option__Group_2__0");
					put(grammarAccess.getCustom_sectionAccess().getGroup(), "rule__Custom_section__Group__0");
					put(grammarAccess.getCustom_valueAccess().getGroup(), "rule__Custom_value__Group__0");
					put(grammarAccess.getResource_optionAccess().getGroup(), "rule__Resource_option__Group__0");
					put(grammarAccess.getResource_optionsAccess().getGroup(), "rule__Resource_options__Group__0");
					put(grammarAccess.getResource_optionsAccess().getGroup_1(), "rule__Resource_options__Group_1__0");
					put(grammarAccess.getResource_valueAccess().getGroup(), "rule__Resource_value__Group__0");
					put(grammarAccess.getResource_sectionAccess().getGroup(), "rule__Resource_section__Group__0");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.hipie.ui.contentassist.antlr.internal.InternalHIPIEParser typedParser = (org.xtext.hipie.ui.contentassist.antlr.internal.InternalHIPIEParser) parser;
			typedParser.entryRuleprogram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public HIPIEGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(HIPIEGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
