/*
 * generated by Xtext
 */
package org.xtext.hipie.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class HIPIEGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "program");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComposition_HeaderAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cComposition_HeaderComposition_headerParserRuleCall_0_0 = (RuleCall)cComposition_HeaderAssignment_0.eContents().get(0);
		private final Assignment cBase_PropsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBase_PropsBase_propParserRuleCall_1_0 = (RuleCall)cBase_PropsAssignment_1.eContents().get(0);
		private final Assignment cContract_InstancesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContract_InstancesContract_instanceParserRuleCall_2_0 = (RuleCall)cContract_InstancesAssignment_2.eContents().get(0);
		private final Assignment cInput_SectionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInput_SectionInput_sectionParserRuleCall_3_0 = (RuleCall)cInput_SectionAssignment_3.eContents().get(0);
		private final Assignment cOutput_SectionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutput_SectionOutput_sectionParserRuleCall_4_0 = (RuleCall)cOutput_SectionAssignment_4.eContents().get(0);
		private final Assignment cVisual_SectionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVisual_SectionVisual_sectionParserRuleCall_5_0 = (RuleCall)cVisual_SectionAssignment_5.eContents().get(0);
		private final Assignment cGenerate_SectionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cGenerate_SectionGenerate_sectionParserRuleCall_6_0 = (RuleCall)cGenerate_SectionAssignment_6.eContents().get(0);
		private final Assignment cCustom_SectionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCustom_SectionCustom_sectionParserRuleCall_7_0 = (RuleCall)cCustom_SectionAssignment_7.eContents().get(0);
		private final Assignment cResource_SectionAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cResource_SectionResource_sectionParserRuleCall_8_0 = (RuleCall)cResource_SectionAssignment_8.eContents().get(0);
		
		//program:
		//	Composition_Header+=composition_header? Base_Props+=base_prop+ Contract_Instances+=contract_instance*
		//	Input_Section+=input_section? Output_Section+=output_section? Visual_Section+=visual_section*
		//	Generate_Section+=generate_section? Custom_Section+=custom_section? Resource_Section+=resource_section?;
		@Override public ParserRule getRule() { return rule; }

		//Composition_Header+=composition_header? Base_Props+=base_prop+ Contract_Instances+=contract_instance*
		//Input_Section+=input_section? Output_Section+=output_section? Visual_Section+=visual_section*
		//Generate_Section+=generate_section? Custom_Section+=custom_section? Resource_Section+=resource_section?
		public Group getGroup() { return cGroup; }

		//Composition_Header+=composition_header?
		public Assignment getComposition_HeaderAssignment_0() { return cComposition_HeaderAssignment_0; }

		//composition_header
		public RuleCall getComposition_HeaderComposition_headerParserRuleCall_0_0() { return cComposition_HeaderComposition_headerParserRuleCall_0_0; }

		//Base_Props+=base_prop+
		public Assignment getBase_PropsAssignment_1() { return cBase_PropsAssignment_1; }

		//base_prop
		public RuleCall getBase_PropsBase_propParserRuleCall_1_0() { return cBase_PropsBase_propParserRuleCall_1_0; }

		//Contract_Instances+=contract_instance*
		public Assignment getContract_InstancesAssignment_2() { return cContract_InstancesAssignment_2; }

		//contract_instance
		public RuleCall getContract_InstancesContract_instanceParserRuleCall_2_0() { return cContract_InstancesContract_instanceParserRuleCall_2_0; }

		//Input_Section+=input_section?
		public Assignment getInput_SectionAssignment_3() { return cInput_SectionAssignment_3; }

		//input_section
		public RuleCall getInput_SectionInput_sectionParserRuleCall_3_0() { return cInput_SectionInput_sectionParserRuleCall_3_0; }

		//Output_Section+=output_section?
		public Assignment getOutput_SectionAssignment_4() { return cOutput_SectionAssignment_4; }

		//output_section
		public RuleCall getOutput_SectionOutput_sectionParserRuleCall_4_0() { return cOutput_SectionOutput_sectionParserRuleCall_4_0; }

		//Visual_Section+=visual_section*
		public Assignment getVisual_SectionAssignment_5() { return cVisual_SectionAssignment_5; }

		//visual_section
		public RuleCall getVisual_SectionVisual_sectionParserRuleCall_5_0() { return cVisual_SectionVisual_sectionParserRuleCall_5_0; }

		//Generate_Section+=generate_section?
		public Assignment getGenerate_SectionAssignment_6() { return cGenerate_SectionAssignment_6; }

		//generate_section
		public RuleCall getGenerate_SectionGenerate_sectionParserRuleCall_6_0() { return cGenerate_SectionGenerate_sectionParserRuleCall_6_0; }

		//Custom_Section+=custom_section?
		public Assignment getCustom_SectionAssignment_7() { return cCustom_SectionAssignment_7; }

		//custom_section
		public RuleCall getCustom_SectionCustom_sectionParserRuleCall_7_0() { return cCustom_SectionCustom_sectionParserRuleCall_7_0; }

		//Resource_Section+=resource_section?
		public Assignment getResource_SectionAssignment_8() { return cResource_SectionAssignment_8; }

		//resource_section
		public RuleCall getResource_SectionResource_sectionParserRuleCall_8_0() { return cResource_SectionResource_sectionParserRuleCall_8_0; }
	}

	public class Base_propElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "base_prop");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0 = (Assignment)cAlternatives_0_0.eContents().get(0);
		private final Keyword cNameNAMEKeyword_0_0_0_0 = (Keyword)cNameAssignment_0_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_1 = (Assignment)cAlternatives_0_0.eContents().get(1);
		private final Keyword cNameDESCRIPTIONKeyword_0_0_1_0 = (Keyword)cNameAssignment_0_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_0_2 = (Assignment)cAlternatives_0_0.eContents().get(2);
		private final Keyword cNameAUTHORKeyword_0_0_2_0 = (Keyword)cNameAssignment_0_0_2.eContents().get(0);
		private final Assignment cNameAssignment_0_0_3 = (Assignment)cAlternatives_0_0.eContents().get(3);
		private final Keyword cNameLICENSEKeyword_0_0_3_0 = (Keyword)cNameAssignment_0_0_3.eContents().get(0);
		private final Assignment cNameAssignment_0_0_4 = (Assignment)cAlternatives_0_0.eContents().get(4);
		private final Keyword cNameCOPYRIGHTKeyword_0_0_4_0 = (Keyword)cNameAssignment_0_0_4.eContents().get(0);
		private final Assignment cNameAssignment_0_0_5 = (Assignment)cAlternatives_0_0.eContents().get(5);
		private final Keyword cNameVERSIONKeyword_0_0_5_0 = (Keyword)cNameAssignment_0_0_5.eContents().get(0);
		private final Assignment cNameAssignment_0_0_6 = (Assignment)cAlternatives_0_0.eContents().get(6);
		private final Keyword cNameLABELKeyword_0_0_6_0 = (Keyword)cNameAssignment_0_0_6.eContents().get(0);
		private final Assignment cNameAssignment_0_0_7 = (Assignment)cAlternatives_0_0.eContents().get(7);
		private final Keyword cNameIDKeyword_0_0_7_0 = (Keyword)cNameAssignment_0_0_7.eContents().get(0);
		private final Assignment cValsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cValsValue_listParserRuleCall_0_1_0 = (RuleCall)cValsAssignment_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameCATEGORYKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Assignment cCatsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCatsCategory_type_listParserRuleCall_1_1_0 = (RuleCall)cCatsAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//base_prop:
		//	(name="NAME" | name="DESCRIPTION" | name="AUTHOR" | name="LICENSE" | name="COPYRIGHT" | name="VERSION" | name="LABEL"
		//	| name="ID") vals+=value_list ";" | name="CATEGORY" cats+=category_type_list ";";
		@Override public ParserRule getRule() { return rule; }

		//(name="NAME" | name="DESCRIPTION" | name="AUTHOR" | name="LICENSE" | name="COPYRIGHT" | name="VERSION" | name="LABEL" |
		//name="ID") vals+=value_list ";" | name="CATEGORY" cats+=category_type_list ";"
		public Alternatives getAlternatives() { return cAlternatives; }

		//(name="NAME" | name="DESCRIPTION" | name="AUTHOR" | name="LICENSE" | name="COPYRIGHT" | name="VERSION" | name="LABEL" |
		//name="ID") vals+=value_list ";"
		public Group getGroup_0() { return cGroup_0; }

		//name="NAME" | name="DESCRIPTION" | name="AUTHOR" | name="LICENSE" | name="COPYRIGHT" | name="VERSION" | name="LABEL" |
		//name="ID"
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//name="NAME"
		public Assignment getNameAssignment_0_0_0() { return cNameAssignment_0_0_0; }

		//"NAME"
		public Keyword getNameNAMEKeyword_0_0_0_0() { return cNameNAMEKeyword_0_0_0_0; }

		//name="DESCRIPTION"
		public Assignment getNameAssignment_0_0_1() { return cNameAssignment_0_0_1; }

		//"DESCRIPTION"
		public Keyword getNameDESCRIPTIONKeyword_0_0_1_0() { return cNameDESCRIPTIONKeyword_0_0_1_0; }

		//name="AUTHOR"
		public Assignment getNameAssignment_0_0_2() { return cNameAssignment_0_0_2; }

		//"AUTHOR"
		public Keyword getNameAUTHORKeyword_0_0_2_0() { return cNameAUTHORKeyword_0_0_2_0; }

		//name="LICENSE"
		public Assignment getNameAssignment_0_0_3() { return cNameAssignment_0_0_3; }

		//"LICENSE"
		public Keyword getNameLICENSEKeyword_0_0_3_0() { return cNameLICENSEKeyword_0_0_3_0; }

		//name="COPYRIGHT"
		public Assignment getNameAssignment_0_0_4() { return cNameAssignment_0_0_4; }

		//"COPYRIGHT"
		public Keyword getNameCOPYRIGHTKeyword_0_0_4_0() { return cNameCOPYRIGHTKeyword_0_0_4_0; }

		//name="VERSION"
		public Assignment getNameAssignment_0_0_5() { return cNameAssignment_0_0_5; }

		//"VERSION"
		public Keyword getNameVERSIONKeyword_0_0_5_0() { return cNameVERSIONKeyword_0_0_5_0; }

		//name="LABEL"
		public Assignment getNameAssignment_0_0_6() { return cNameAssignment_0_0_6; }

		//"LABEL"
		public Keyword getNameLABELKeyword_0_0_6_0() { return cNameLABELKeyword_0_0_6_0; }

		//name="ID"
		public Assignment getNameAssignment_0_0_7() { return cNameAssignment_0_0_7; }

		//"ID"
		public Keyword getNameIDKeyword_0_0_7_0() { return cNameIDKeyword_0_0_7_0; }

		//vals+=value_list
		public Assignment getValsAssignment_0_1() { return cValsAssignment_0_1; }

		//value_list
		public RuleCall getValsValue_listParserRuleCall_0_1_0() { return cValsValue_listParserRuleCall_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//name="CATEGORY" cats+=category_type_list ";"
		public Group getGroup_1() { return cGroup_1; }

		//name="CATEGORY"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"CATEGORY"
		public Keyword getNameCATEGORYKeyword_1_0_0() { return cNameCATEGORYKeyword_1_0_0; }

		//cats+=category_type_list
		public Assignment getCatsAssignment_1_1() { return cCatsAssignment_1_1; }

		//category_type_list
		public RuleCall getCatsCategory_type_listParserRuleCall_1_1_0() { return cCatsCategory_type_listParserRuleCall_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_1_2() { return cSemicolonKeyword_1_2; }
	}

	public class Category_typeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "category_type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCLEANKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cINPUTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAPPENDKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cLINKKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cANALYSISKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cCUSTOMKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cVISUALIZEKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cOUTPUTKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		
		//category_type:
		//	"CLEAN" | "INPUT" | "APPEND" | "LINK" | "ANALYSIS" | "CUSTOM" | "VISUALIZE" | "OUTPUT";
		@Override public ParserRule getRule() { return rule; }

		//"CLEAN" | "INPUT" | "APPEND" | "LINK" | "ANALYSIS" | "CUSTOM" | "VISUALIZE" | "OUTPUT"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"CLEAN"
		public Keyword getCLEANKeyword_0() { return cCLEANKeyword_0; }

		//"INPUT"
		public Keyword getINPUTKeyword_1() { return cINPUTKeyword_1; }

		//"APPEND"
		public Keyword getAPPENDKeyword_2() { return cAPPENDKeyword_2; }

		//"LINK"
		public Keyword getLINKKeyword_3() { return cLINKKeyword_3; }

		//"ANALYSIS"
		public Keyword getANALYSISKeyword_4() { return cANALYSISKeyword_4; }

		//"CUSTOM"
		public Keyword getCUSTOMKeyword_5() { return cCUSTOMKeyword_5; }

		//"VISUALIZE"
		public Keyword getVISUALIZEKeyword_6() { return cVISUALIZEKeyword_6; }

		//"OUTPUT"
		public Keyword getOUTPUTKeyword_7() { return cOUTPUTKeyword_7; }
	}

	public class Category_type_listElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "category_type_list");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameCategory_typeParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCategory_typeParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//category_type_list:
		//	name=category_type ("," category_type)*;
		@Override public ParserRule getRule() { return rule; }

		//name=category_type ("," category_type)*
		public Group getGroup() { return cGroup; }

		//name=category_type
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//category_type
		public RuleCall getNameCategory_typeParserRuleCall_0_0() { return cNameCategory_typeParserRuleCall_0_0; }

		//("," category_type)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//category_type
		public RuleCall getCategory_typeParserRuleCall_1_1() { return cCategory_typeParserRuleCall_1_1; }
	}

	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTypeINTTerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//value:
		//	name=ID | type=INT | name=STRING;
		@Override public ParserRule getRule() { return rule; }

		//name=ID | type=INT | name=STRING
		public Alternatives getAlternatives() { return cAlternatives; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//type=INT
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//INT
		public RuleCall getTypeINTTerminalRuleCall_1_0() { return cTypeINTTerminalRuleCall_1_0; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
	}

	public class Value_listElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "value_list");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValsValueParserRuleCall_1_1_0 = (RuleCall)cValsAssignment_1_1.eContents().get(0);
		
		//value_list:
		//	value ("," vals+=value)*;
		@Override public ParserRule getRule() { return rule; }

		//value ("," vals+=value)*
		public Group getGroup() { return cGroup; }

		//value
		public RuleCall getValueParserRuleCall_0() { return cValueParserRuleCall_0; }

		//("," vals+=value)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//vals+=value
		public Assignment getValsAssignment_1_1() { return cValsAssignment_1_1; }

		//value
		public RuleCall getValsValueParserRuleCall_1_1_0() { return cValsValueParserRuleCall_1_1_0; }
	}

	public class ID_listElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ID_list");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ID_list:
		//	ID ("," ID)*;
		@Override public ParserRule getRule() { return rule; }

		//ID ("," ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("," ID)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class AssignElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assign");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValsValue_listParserRuleCall_2_0 = (RuleCall)cValsAssignment_2.eContents().get(0);
		
		//assign:
		//	value "=" vals+=value_list;
		@Override public ParserRule getRule() { return rule; }

		//value "=" vals+=value_list
		public Group getGroup() { return cGroup; }

		//value
		public RuleCall getValueParserRuleCall_0() { return cValueParserRuleCall_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//vals+=value_list
		public Assignment getValsAssignment_2() { return cValsAssignment_2; }

		//value_list
		public RuleCall getValsValue_listParserRuleCall_2_0() { return cValsValue_listParserRuleCall_2_0; }
	}

	public class Assign_listElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assign_list");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAssignParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAssign_internalAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAssign_internalAssignParserRuleCall_1_1_0 = (RuleCall)cAssign_internalAssignment_1_1.eContents().get(0);
		
		//assign_list:
		//	assign ("," assign_internal+=assign)*;
		@Override public ParserRule getRule() { return rule; }

		//assign ("," assign_internal+=assign)*
		public Group getGroup() { return cGroup; }

		//assign
		public RuleCall getAssignParserRuleCall_0() { return cAssignParserRuleCall_0; }

		//("," assign_internal+=assign)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//assign_internal+=assign
		public Assignment getAssign_internalAssignment_1_1() { return cAssign_internalAssignment_1_1; }

		//assign
		public RuleCall getAssign_internalAssignParserRuleCall_1_1_0() { return cAssign_internalAssignParserRuleCall_1_1_0; }
	}

	public class Composition_headerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "composition_header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameHEADERKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cAssignsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAssignsAssignParserRuleCall_1_0 = (RuleCall)cAssignsAssignment_1.eContents().get(0);
		private final Keyword cENDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//composition_header:
		//	name="HEADER" assigns+=assign* "END";
		@Override public ParserRule getRule() { return rule; }

		//name="HEADER" assigns+=assign* "END"
		public Group getGroup() { return cGroup; }

		//name="HEADER"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"HEADER"
		public Keyword getNameHEADERKeyword_0_0() { return cNameHEADERKeyword_0_0; }

		//assigns+=assign*
		public Assignment getAssignsAssignment_1() { return cAssignsAssignment_1; }

		//assign
		public RuleCall getAssignsAssignParserRuleCall_1_0() { return cAssignsAssignParserRuleCall_1_0; }

		//"END"
		public Keyword getENDKeyword_2() { return cENDKeyword_2; }
	}

	public class Contract_instanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "contract_instance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameINSTANCEKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cValsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValsValueParserRuleCall_2_0 = (RuleCall)cValsAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVarsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cVarsValueCrossReference_4_0 = (CrossReference)cVarsAssignment_4.eContents().get(0);
		private final RuleCall cVarsValueIDTerminalRuleCall_4_0_1 = (RuleCall)cVarsValueCrossReference_4_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAssignsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAssignsAssignParserRuleCall_6_0 = (RuleCall)cAssignsAssignment_6.eContents().get(0);
		private final Keyword cENDKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//contract_instance:
		//	name="INSTANCE" (ID ":")? vals+=value "(" vars+=[value] ")" assigns+=assign* "END";
		@Override public ParserRule getRule() { return rule; }

		//name="INSTANCE" (ID ":")? vals+=value "(" vars+=[value] ")" assigns+=assign* "END"
		public Group getGroup() { return cGroup; }

		//name="INSTANCE"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"INSTANCE"
		public Keyword getNameINSTANCEKeyword_0_0() { return cNameINSTANCEKeyword_0_0; }

		//(ID ":")?
		public Group getGroup_1() { return cGroup_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_0() { return cIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//vals+=value
		public Assignment getValsAssignment_2() { return cValsAssignment_2; }

		//value
		public RuleCall getValsValueParserRuleCall_2_0() { return cValsValueParserRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//vars+=[value]
		public Assignment getVarsAssignment_4() { return cVarsAssignment_4; }

		//[value]
		public CrossReference getVarsValueCrossReference_4_0() { return cVarsValueCrossReference_4_0; }

		//ID
		public RuleCall getVarsValueIDTerminalRuleCall_4_0_1() { return cVarsValueIDTerminalRuleCall_4_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//assigns+=assign*
		public Assignment getAssignsAssignment_6() { return cAssignsAssignment_6; }

		//assign
		public RuleCall getAssignsAssignParserRuleCall_6_0() { return cAssignsAssignParserRuleCall_6_0; }

		//"END"
		public Keyword getENDKeyword_7() { return cENDKeyword_7; }
	}

	public class Field_declElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "field_decl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFIELDKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInput_internalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInput_internalInput_optionsParserRuleCall_2_0 = (RuleCall)cInput_internalAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//field_decl:
		//	"FIELD" name=ID input_internal+=input_options? ";";
		@Override public ParserRule getRule() { return rule; }

		//"FIELD" name=ID input_internal+=input_options? ";"
		public Group getGroup() { return cGroup; }

		//"FIELD"
		public Keyword getFIELDKeyword_0() { return cFIELDKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//input_internal+=input_options?
		public Assignment getInput_internalAssignment_2() { return cInput_internalAssignment_2; }

		//input_options
		public RuleCall getInput_internalInput_optionsParserRuleCall_2_0() { return cInput_internalInput_optionsParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class Enum_declElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "enum_decl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameENUMKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValsAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValsValue_listParserRuleCall_2_0_0 = (RuleCall)cValsAssignment_2_0.eContents().get(0);
		private final Assignment cAssignsAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cAssignsAssign_listParserRuleCall_2_1_0 = (RuleCall)cAssignsAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//enum_decl:
		//	name="ENUM" "(" (vals+=value_list | assigns+=assign_list) ")";
		@Override public ParserRule getRule() { return rule; }

		//name="ENUM" "(" (vals+=value_list | assigns+=assign_list) ")"
		public Group getGroup() { return cGroup; }

		//name="ENUM"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"ENUM"
		public Keyword getNameENUMKeyword_0_0() { return cNameENUMKeyword_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//vals+=value_list | assigns+=assign_list
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//vals+=value_list
		public Assignment getValsAssignment_2_0() { return cValsAssignment_2_0; }

		//value_list
		public RuleCall getValsValue_listParserRuleCall_2_0_0() { return cValsValue_listParserRuleCall_2_0_0; }

		//assigns+=assign_list
		public Assignment getAssignsAssignment_2_1() { return cAssignsAssignment_2_1; }

		//assign_list
		public RuleCall getAssignsAssign_listParserRuleCall_2_1_0() { return cAssignsAssign_listParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class Input_sectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "input_section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameINPUTSKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cInputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInputsInput_valueParserRuleCall_1_0 = (RuleCall)cInputsAssignment_1.eContents().get(0);
		private final Keyword cENDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//input_section:
		//	name="INPUTS" inputs+=input_value+ "END";
		@Override public ParserRule getRule() { return rule; }

		//name="INPUTS" inputs+=input_value+ "END"
		public Group getGroup() { return cGroup; }

		//name="INPUTS"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"INPUTS"
		public Keyword getNameINPUTSKeyword_0_0() { return cNameINPUTSKeyword_0_0; }

		//inputs+=input_value+
		public Assignment getInputsAssignment_1() { return cInputsAssignment_1; }

		//input_value
		public RuleCall getInputsInput_valueParserRuleCall_1_0() { return cInputsInput_valueParserRuleCall_1_0; }

		//"END"
		public Keyword getENDKeyword_2() { return cENDKeyword_2; }
	}

	public class BoolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bool");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBOOLKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//bool:
		//	"BOOL" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"BOOL" name=ID
		public Group getGroup() { return cGroup; }

		//"BOOL"
		public Keyword getBOOLKeyword_0() { return cBOOLKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class Int_varElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "int_var");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cINTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//int_var:
		//	"INT" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"INT" name=ID
		public Group getGroup() { return cGroup; }

		//"INT"
		public Keyword getINTKeyword_0() { return cINTKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class String_varElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "string_var");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSTRINGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//string_var:
		//	"STRING" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"STRING" name=ID
		public Group getGroup() { return cGroup; }

		//"STRING"
		public Keyword getSTRINGKeyword_0() { return cSTRINGKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class RecordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "record");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRECORDKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//record:
		//	"RECORD" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"RECORD" name=ID
		public Group getGroup() { return cGroup; }

		//"RECORD"
		public Keyword getRECORDKeyword_0() { return cRECORDKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class DatasetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dataset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDATASETKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//dataset:
		//	"DATASET" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"DATASET" name=ID
		public Group getGroup() { return cGroup; }

		//"DATASET"
		public Keyword getDATASETKeyword_0() { return cDATASETKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGROUPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//group:
		//	"GROUP" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"GROUP" name=ID
		public Group getGroup() { return cGroup; }

		//"GROUP"
		public Keyword getGROUPKeyword_0() { return cGROUPKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class DatatypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "datatype");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBoolParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInt_varParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cString_varParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRecordParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDatasetParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//datatype:
		//	bool | int_var | string_var | record | dataset;
		@Override public ParserRule getRule() { return rule; }

		//bool | int_var | string_var | record | dataset
		public Alternatives getAlternatives() { return cAlternatives; }

		//bool
		public RuleCall getBoolParserRuleCall_0() { return cBoolParserRuleCall_0; }

		//int_var
		public RuleCall getInt_varParserRuleCall_1() { return cInt_varParserRuleCall_1; }

		//string_var
		public RuleCall getString_varParserRuleCall_2() { return cString_varParserRuleCall_2; }

		//record
		public RuleCall getRecordParserRuleCall_3() { return cRecordParserRuleCall_3; }

		//dataset
		public RuleCall getDatasetParserRuleCall_4() { return cDatasetParserRuleCall_4; }
	}

	public class Input_valueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "input_value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final RuleCall cBoolParserRuleCall_0_0_0 = (RuleCall)cAlternatives_0_0.eContents().get(0);
		private final RuleCall cInt_varParserRuleCall_0_0_1 = (RuleCall)cAlternatives_0_0.eContents().get(1);
		private final RuleCall cEnum_declParserRuleCall_0_0_2 = (RuleCall)cAlternatives_0_0.eContents().get(2);
		private final RuleCall cString_varParserRuleCall_0_0_3 = (RuleCall)cAlternatives_0_0.eContents().get(3);
		private final RuleCall cRecordParserRuleCall_0_0_4 = (RuleCall)cAlternatives_0_0.eContents().get(4);
		private final RuleCall cDatasetParserRuleCall_0_0_5 = (RuleCall)cAlternatives_0_0.eContents().get(5);
		private final Assignment cInput_opsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cInput_opsInput_optionsParserRuleCall_0_1_0 = (RuleCall)cInput_opsAssignment_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cDatasetParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cInput_opsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInput_opsInput_optionsParserRuleCall_1_1_0 = (RuleCall)cInput_opsAssignment_1_1.eContents().get(0);
		private final Assignment cFieldsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cFieldsField_declParserRuleCall_1_2_0 = (RuleCall)cFieldsAssignment_1_2.eContents().get(0);
		private final Keyword cENDKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cGroupParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cInput_internalAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInput_internalInput_optionsParserRuleCall_2_1_0 = (RuleCall)cInput_internalAssignment_2_1.eContents().get(0);
		private final Assignment cValuesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cValuesInput_valueParserRuleCall_2_2_0 = (RuleCall)cValuesAssignment_2_2.eContents().get(0);
		private final Keyword cENDKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//input_value:
		//	(bool | int_var | enum_decl | string_var | record | dataset) input_ops+=input_options? ";" | dataset
		//	input_ops+=input_options? fields+=field_decl* "END" | group input_internal+=input_options? values+=input_value* "END";
		@Override public ParserRule getRule() { return rule; }

		//(bool | int_var | enum_decl | string_var | record | dataset) input_ops+=input_options? ";" | dataset
		//input_ops+=input_options? fields+=field_decl* "END" | group input_internal+=input_options? values+=input_value* "END"
		public Alternatives getAlternatives() { return cAlternatives; }

		//(bool | int_var | enum_decl | string_var | record | dataset) input_ops+=input_options? ";"
		public Group getGroup_0() { return cGroup_0; }

		//bool | int_var | enum_decl | string_var | record | dataset
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//bool
		public RuleCall getBoolParserRuleCall_0_0_0() { return cBoolParserRuleCall_0_0_0; }

		//int_var
		public RuleCall getInt_varParserRuleCall_0_0_1() { return cInt_varParserRuleCall_0_0_1; }

		//enum_decl
		public RuleCall getEnum_declParserRuleCall_0_0_2() { return cEnum_declParserRuleCall_0_0_2; }

		//string_var
		public RuleCall getString_varParserRuleCall_0_0_3() { return cString_varParserRuleCall_0_0_3; }

		//record
		public RuleCall getRecordParserRuleCall_0_0_4() { return cRecordParserRuleCall_0_0_4; }

		//dataset
		public RuleCall getDatasetParserRuleCall_0_0_5() { return cDatasetParserRuleCall_0_0_5; }

		//input_ops+=input_options?
		public Assignment getInput_opsAssignment_0_1() { return cInput_opsAssignment_0_1; }

		//input_options
		public RuleCall getInput_opsInput_optionsParserRuleCall_0_1_0() { return cInput_opsInput_optionsParserRuleCall_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//dataset input_ops+=input_options? fields+=field_decl* "END"
		public Group getGroup_1() { return cGroup_1; }

		//dataset
		public RuleCall getDatasetParserRuleCall_1_0() { return cDatasetParserRuleCall_1_0; }

		//input_ops+=input_options?
		public Assignment getInput_opsAssignment_1_1() { return cInput_opsAssignment_1_1; }

		//input_options
		public RuleCall getInput_opsInput_optionsParserRuleCall_1_1_0() { return cInput_opsInput_optionsParserRuleCall_1_1_0; }

		//fields+=field_decl*
		public Assignment getFieldsAssignment_1_2() { return cFieldsAssignment_1_2; }

		//field_decl
		public RuleCall getFieldsField_declParserRuleCall_1_2_0() { return cFieldsField_declParserRuleCall_1_2_0; }

		//"END"
		public Keyword getENDKeyword_1_3() { return cENDKeyword_1_3; }

		//group input_internal+=input_options? values+=input_value* "END"
		public Group getGroup_2() { return cGroup_2; }

		//group
		public RuleCall getGroupParserRuleCall_2_0() { return cGroupParserRuleCall_2_0; }

		//input_internal+=input_options?
		public Assignment getInput_internalAssignment_2_1() { return cInput_internalAssignment_2_1; }

		//input_options
		public RuleCall getInput_internalInput_optionsParserRuleCall_2_1_0() { return cInput_internalInput_optionsParserRuleCall_2_1_0; }

		//values+=input_value*
		public Assignment getValuesAssignment_2_2() { return cValuesAssignment_2_2; }

		//input_value
		public RuleCall getValuesInput_valueParserRuleCall_2_2_0() { return cValuesInput_valueParserRuleCall_2_2_0; }

		//"END"
		public Keyword getENDKeyword_2_3() { return cENDKeyword_2_3; }
	}

	public class Input_optionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "input_options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cInput_optionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInput_internalAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInput_internalInput_optionParserRuleCall_2_1_0 = (RuleCall)cInput_internalAssignment_2_1.eContents().get(0);
		
		//input_options:
		//	":" input_option ("," input_internal+=input_option)*;
		@Override public ParserRule getRule() { return rule; }

		//":" input_option ("," input_internal+=input_option)*
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//input_option
		public RuleCall getInput_optionParserRuleCall_1() { return cInput_optionParserRuleCall_1; }

		//("," input_internal+=input_option)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//input_internal+=input_option
		public Assignment getInput_internalAssignment_2_1() { return cInput_internalAssignment_2_1; }

		//input_option
		public RuleCall getInput_internalInput_optionParserRuleCall_2_1_0() { return cInput_internalInput_optionParserRuleCall_2_1_0; }
	}

	public class Input_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "input_option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cNameOPTIONALKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cNameDEFINEDKeyword_0_1_0 = (Keyword)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final Keyword cNameDISABLEDKeyword_0_2_0 = (Keyword)cNameAssignment_0_2.eContents().get(0);
		private final Assignment cNameAssignment_0_3 = (Assignment)cAlternatives_0.eContents().get(3);
		private final Keyword cNameMAPBYTYPEKeyword_0_3_0 = (Keyword)cNameAssignment_0_3.eContents().get(0);
		private final Assignment cNameAssignment_0_4 = (Assignment)cAlternatives_0.eContents().get(4);
		private final Keyword cNameMAPBYNAMEKeyword_0_4_0 = (Keyword)cNameAssignment_0_4.eContents().get(0);
		private final Assignment cNameAssignment_0_5 = (Assignment)cAlternatives_0.eContents().get(5);
		private final Keyword cNameMANYKeyword_0_5_0 = (Keyword)cNameAssignment_0_5.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameFORMFIELDKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cFormfield_optionParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameENABLEKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cAssigns_internalAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAssigns_internalAssign_listParserRuleCall_2_2_0 = (RuleCall)cAssigns_internalAssignment_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cNameAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cNameTYPEKeyword_3_0_0 = (Keyword)cNameAssignment_3_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final RuleCall cInputtype_optionsParserRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Assignment cNameAssignment_4_0_0 = (Assignment)cAlternatives_4_0.eContents().get(0);
		private final Keyword cNameRANGEKeyword_4_0_0_0 = (Keyword)cNameAssignment_4_0_0.eContents().get(0);
		private final Assignment cNameAssignment_4_0_1 = (Assignment)cAlternatives_4_0.eContents().get(1);
		private final Keyword cNameDEFAULTKeyword_4_0_1_0 = (Keyword)cNameAssignment_4_0_1.eContents().get(0);
		private final Assignment cNameAssignment_4_0_2 = (Assignment)cAlternatives_4_0.eContents().get(2);
		private final Keyword cNameMAXLENGTHKeyword_4_0_2_0 = (Keyword)cNameAssignment_4_0_2.eContents().get(0);
		private final Assignment cNameAssignment_4_0_3 = (Assignment)cAlternatives_4_0.eContents().get(3);
		private final Keyword cNameDISABLEDKeyword_4_0_3_0 = (Keyword)cNameAssignment_4_0_3.eContents().get(0);
		private final Assignment cNameAssignment_4_0_4 = (Assignment)cAlternatives_4_0.eContents().get(4);
		private final Keyword cNameDESCRIPTIONKeyword_4_0_4_0 = (Keyword)cNameAssignment_4_0_4.eContents().get(0);
		private final Assignment cNameAssignment_4_0_5 = (Assignment)cAlternatives_4_0.eContents().get(5);
		private final Keyword cNameNULLKeyword_4_0_5_0 = (Keyword)cNameAssignment_4_0_5.eContents().get(0);
		private final Assignment cNameAssignment_4_0_6 = (Assignment)cAlternatives_4_0.eContents().get(6);
		private final Keyword cNameFIELDLENGTHKeyword_4_0_6_0 = (Keyword)cNameAssignment_4_0_6.eContents().get(0);
		private final Assignment cNameAssignment_4_0_7 = (Assignment)cAlternatives_4_0.eContents().get(7);
		private final Keyword cNameROWSKeyword_4_0_7_0 = (Keyword)cNameAssignment_4_0_7.eContents().get(0);
		private final Assignment cNameAssignment_4_0_8 = (Assignment)cAlternatives_4_0.eContents().get(8);
		private final Keyword cNameCOLSKeyword_4_0_8_0 = (Keyword)cNameAssignment_4_0_8.eContents().get(0);
		private final Assignment cNameAssignment_4_0_9 = (Assignment)cAlternatives_4_0.eContents().get(9);
		private final Keyword cName_HTML_STYLECLASSKeyword_4_0_9_0 = (Keyword)cNameAssignment_4_0_9.eContents().get(0);
		private final Assignment cNameAssignment_4_0_10 = (Assignment)cAlternatives_4_0.eContents().get(10);
		private final Keyword cNameLABELKeyword_4_0_10_0 = (Keyword)cNameAssignment_4_0_10.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cValsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cValsValue_listParserRuleCall_4_2_0 = (RuleCall)cValsAssignment_4_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//input_option:
		//	(name="OPTIONAL" | name="DEFINED" | name="DISABLED" | name="MAPBYTYPE" | name="MAPBYNAME" | name="MANY") |
		//	name="FORMFIELD" "(" formfield_option ")" | name="ENABLE" "(" assigns_internal+=assign_list ")" | name="TYPE" "("
		//	inputtype_options ")" | (name="RANGE" | name="DEFAULT" | name="MAXLENGTH" | name="DISABLED" | name="DESCRIPTION" |
		//	name="NULL" | name="FIELDLENGTH" | name="ROWS" | name="COLS" | name="_HTML_STYLECLASS" | name="LABEL") "("
		//	vals+=value_list ")";
		@Override public ParserRule getRule() { return rule; }

		//(name="OPTIONAL" | name="DEFINED" | name="DISABLED" | name="MAPBYTYPE" | name="MAPBYNAME" | name="MANY") |
		//name="FORMFIELD" "(" formfield_option ")" | name="ENABLE" "(" assigns_internal+=assign_list ")" | name="TYPE" "("
		//inputtype_options ")" | (name="RANGE" | name="DEFAULT" | name="MAXLENGTH" | name="DISABLED" | name="DESCRIPTION" |
		//name="NULL" | name="FIELDLENGTH" | name="ROWS" | name="COLS" | name="_HTML_STYLECLASS" | name="LABEL") "("
		//vals+=value_list ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="OPTIONAL" | name="DEFINED" | name="DISABLED" | name="MAPBYTYPE" | name="MAPBYNAME" | name="MANY"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//name="OPTIONAL"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"OPTIONAL"
		public Keyword getNameOPTIONALKeyword_0_0_0() { return cNameOPTIONALKeyword_0_0_0; }

		//name="DEFINED"
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//"DEFINED"
		public Keyword getNameDEFINEDKeyword_0_1_0() { return cNameDEFINEDKeyword_0_1_0; }

		//name="DISABLED"
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//"DISABLED"
		public Keyword getNameDISABLEDKeyword_0_2_0() { return cNameDISABLEDKeyword_0_2_0; }

		//name="MAPBYTYPE"
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }

		//"MAPBYTYPE"
		public Keyword getNameMAPBYTYPEKeyword_0_3_0() { return cNameMAPBYTYPEKeyword_0_3_0; }

		//name="MAPBYNAME"
		public Assignment getNameAssignment_0_4() { return cNameAssignment_0_4; }

		//"MAPBYNAME"
		public Keyword getNameMAPBYNAMEKeyword_0_4_0() { return cNameMAPBYNAMEKeyword_0_4_0; }

		//name="MANY"
		public Assignment getNameAssignment_0_5() { return cNameAssignment_0_5; }

		//"MANY"
		public Keyword getNameMANYKeyword_0_5_0() { return cNameMANYKeyword_0_5_0; }

		//name="FORMFIELD" "(" formfield_option ")"
		public Group getGroup_1() { return cGroup_1; }

		//name="FORMFIELD"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"FORMFIELD"
		public Keyword getNameFORMFIELDKeyword_1_0_0() { return cNameFORMFIELDKeyword_1_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//formfield_option
		public RuleCall getFormfield_optionParserRuleCall_1_2() { return cFormfield_optionParserRuleCall_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//name="ENABLE" "(" assigns_internal+=assign_list ")"
		public Group getGroup_2() { return cGroup_2; }

		//name="ENABLE"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"ENABLE"
		public Keyword getNameENABLEKeyword_2_0_0() { return cNameENABLEKeyword_2_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//assigns_internal+=assign_list
		public Assignment getAssigns_internalAssignment_2_2() { return cAssigns_internalAssignment_2_2; }

		//assign_list
		public RuleCall getAssigns_internalAssign_listParserRuleCall_2_2_0() { return cAssigns_internalAssign_listParserRuleCall_2_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//name="TYPE" "(" inputtype_options ")"
		public Group getGroup_3() { return cGroup_3; }

		//name="TYPE"
		public Assignment getNameAssignment_3_0() { return cNameAssignment_3_0; }

		//"TYPE"
		public Keyword getNameTYPEKeyword_3_0_0() { return cNameTYPEKeyword_3_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }

		//inputtype_options
		public RuleCall getInputtype_optionsParserRuleCall_3_2() { return cInputtype_optionsParserRuleCall_3_2; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }

		//(name="RANGE" | name="DEFAULT" | name="MAXLENGTH" | name="DISABLED" | name="DESCRIPTION" | name="NULL" |
		//name="FIELDLENGTH" | name="ROWS" | name="COLS" | name="_HTML_STYLECLASS" | name="LABEL") "(" vals+=value_list ")"
		public Group getGroup_4() { return cGroup_4; }

		//name="RANGE" | name="DEFAULT" | name="MAXLENGTH" | name="DISABLED" | name="DESCRIPTION" | name="NULL" |
		//name="FIELDLENGTH" | name="ROWS" | name="COLS" | name="_HTML_STYLECLASS" | name="LABEL"
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }

		//name="RANGE"
		public Assignment getNameAssignment_4_0_0() { return cNameAssignment_4_0_0; }

		//"RANGE"
		public Keyword getNameRANGEKeyword_4_0_0_0() { return cNameRANGEKeyword_4_0_0_0; }

		//name="DEFAULT"
		public Assignment getNameAssignment_4_0_1() { return cNameAssignment_4_0_1; }

		//"DEFAULT"
		public Keyword getNameDEFAULTKeyword_4_0_1_0() { return cNameDEFAULTKeyword_4_0_1_0; }

		//name="MAXLENGTH"
		public Assignment getNameAssignment_4_0_2() { return cNameAssignment_4_0_2; }

		//"MAXLENGTH"
		public Keyword getNameMAXLENGTHKeyword_4_0_2_0() { return cNameMAXLENGTHKeyword_4_0_2_0; }

		//name="DISABLED"
		public Assignment getNameAssignment_4_0_3() { return cNameAssignment_4_0_3; }

		//"DISABLED"
		public Keyword getNameDISABLEDKeyword_4_0_3_0() { return cNameDISABLEDKeyword_4_0_3_0; }

		//name="DESCRIPTION"
		public Assignment getNameAssignment_4_0_4() { return cNameAssignment_4_0_4; }

		//"DESCRIPTION"
		public Keyword getNameDESCRIPTIONKeyword_4_0_4_0() { return cNameDESCRIPTIONKeyword_4_0_4_0; }

		//name="NULL"
		public Assignment getNameAssignment_4_0_5() { return cNameAssignment_4_0_5; }

		//"NULL"
		public Keyword getNameNULLKeyword_4_0_5_0() { return cNameNULLKeyword_4_0_5_0; }

		//name="FIELDLENGTH"
		public Assignment getNameAssignment_4_0_6() { return cNameAssignment_4_0_6; }

		//"FIELDLENGTH"
		public Keyword getNameFIELDLENGTHKeyword_4_0_6_0() { return cNameFIELDLENGTHKeyword_4_0_6_0; }

		//name="ROWS"
		public Assignment getNameAssignment_4_0_7() { return cNameAssignment_4_0_7; }

		//"ROWS"
		public Keyword getNameROWSKeyword_4_0_7_0() { return cNameROWSKeyword_4_0_7_0; }

		//name="COLS"
		public Assignment getNameAssignment_4_0_8() { return cNameAssignment_4_0_8; }

		//"COLS"
		public Keyword getNameCOLSKeyword_4_0_8_0() { return cNameCOLSKeyword_4_0_8_0; }

		//name="_HTML_STYLECLASS"
		public Assignment getNameAssignment_4_0_9() { return cNameAssignment_4_0_9; }

		//"_HTML_STYLECLASS"
		public Keyword getName_HTML_STYLECLASSKeyword_4_0_9_0() { return cName_HTML_STYLECLASSKeyword_4_0_9_0; }

		//name="LABEL"
		public Assignment getNameAssignment_4_0_10() { return cNameAssignment_4_0_10; }

		//"LABEL"
		public Keyword getNameLABELKeyword_4_0_10_0() { return cNameLABELKeyword_4_0_10_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }

		//vals+=value_list
		public Assignment getValsAssignment_4_2() { return cValsAssignment_4_2; }

		//value_list
		public RuleCall getValsValue_listParserRuleCall_4_2_0() { return cValsValue_listParserRuleCall_4_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_3() { return cRightParenthesisKeyword_4_3; }
	}

	public class Formfield_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "formfield_option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCHECKBOXKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRADIOKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cSELECTKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cMULTIPLESELECTKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cTEXTAREAKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cHIDDENKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cTEXTKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//formfield_option:
		//	"CHECKBOX" | "RADIO" | "SELECT" | "MULTIPLESELECT" | "TEXTAREA" | "HIDDEN" | "TEXT";
		@Override public ParserRule getRule() { return rule; }

		//"CHECKBOX" | "RADIO" | "SELECT" | "MULTIPLESELECT" | "TEXTAREA" | "HIDDEN" | "TEXT"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"CHECKBOX"
		public Keyword getCHECKBOXKeyword_0() { return cCHECKBOXKeyword_0; }

		//"RADIO"
		public Keyword getRADIOKeyword_1() { return cRADIOKeyword_1; }

		//"SELECT"
		public Keyword getSELECTKeyword_2() { return cSELECTKeyword_2; }

		//"MULTIPLESELECT"
		public Keyword getMULTIPLESELECTKeyword_3() { return cMULTIPLESELECTKeyword_3; }

		//"TEXTAREA"
		public Keyword getTEXTAREAKeyword_4() { return cTEXTAREAKeyword_4; }

		//"HIDDEN"
		public Keyword getHIDDENKeyword_5() { return cHIDDENKeyword_5; }

		//"TEXT"
		public Keyword getTEXTKeyword_6() { return cTEXTKeyword_6; }
	}

	public class Inputtype_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inputtype_option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSTRINGKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cUNICODEKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cUNISTRKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cINTEGERKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDECIMALKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cNUMERICKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cREALKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//inputtype_option:
		//	"STRING" | "UNICODE" | "UNISTR" | "INTEGER" | "DECIMAL" | "NUMERIC" | "REAL";
		@Override public ParserRule getRule() { return rule; }

		//"STRING" | "UNICODE" | "UNISTR" | "INTEGER" | "DECIMAL" | "NUMERIC" | "REAL"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"STRING"
		public Keyword getSTRINGKeyword_0() { return cSTRINGKeyword_0; }

		//"UNICODE"
		public Keyword getUNICODEKeyword_1() { return cUNICODEKeyword_1; }

		//"UNISTR"
		public Keyword getUNISTRKeyword_2() { return cUNISTRKeyword_2; }

		//"INTEGER"
		public Keyword getINTEGERKeyword_3() { return cINTEGERKeyword_3; }

		//"DECIMAL"
		public Keyword getDECIMALKeyword_4() { return cDECIMALKeyword_4; }

		//"NUMERIC"
		public Keyword getNUMERICKeyword_5() { return cNUMERICKeyword_5; }

		//"REAL"
		public Keyword getREALKeyword_6() { return cREALKeyword_6; }
	}

	public class Inputtype_optionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inputtype_options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInputtype_optionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cInputtype_optionParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//inputtype_options:
		//	inputtype_option ("," inputtype_option)*;
		@Override public ParserRule getRule() { return rule; }

		//inputtype_option ("," inputtype_option)*
		public Group getGroup() { return cGroup; }

		//inputtype_option
		public RuleCall getInputtype_optionParserRuleCall_0() { return cInputtype_optionParserRuleCall_0; }

		//("," inputtype_option)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//inputtype_option
		public RuleCall getInputtype_optionParserRuleCall_1_1() { return cInputtype_optionParserRuleCall_1_1; }
	}

	public class Output_sectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "output_section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameOUTPUTSKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cOutputsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOutputsOutput_valueParserRuleCall_1_0 = (RuleCall)cOutputsAssignment_1.eContents().get(0);
		private final Keyword cENDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//output_section:
		//	name="OUTPUTS" outputs+=output_value+ "END";
		@Override public ParserRule getRule() { return rule; }

		//name="OUTPUTS" outputs+=output_value+ "END"
		public Group getGroup() { return cGroup; }

		//name="OUTPUTS"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"OUTPUTS"
		public Keyword getNameOUTPUTSKeyword_0_0() { return cNameOUTPUTSKeyword_0_0; }

		//outputs+=output_value+
		public Assignment getOutputsAssignment_1() { return cOutputsAssignment_1; }

		//output_value
		public RuleCall getOutputsOutput_valueParserRuleCall_1_0() { return cOutputsOutput_valueParserRuleCall_1_0; }

		//"END"
		public Keyword getENDKeyword_2() { return cENDKeyword_2; }
	}

	public class Outfield_declElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "outfield_decl");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInt_varParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBoolParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cString_varParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Assignment cFieldsAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cFieldsField_declParserRuleCall_3_0 = (RuleCall)cFieldsAssignment_3.eContents().get(0);
		
		//outfield_decl:
		//	int_var | bool | string_var | fields+=field_decl;
		@Override public ParserRule getRule() { return rule; }

		//int_var | bool | string_var | fields+=field_decl
		public Alternatives getAlternatives() { return cAlternatives; }

		//int_var
		public RuleCall getInt_varParserRuleCall_0() { return cInt_varParserRuleCall_0; }

		//bool
		public RuleCall getBoolParserRuleCall_1() { return cBoolParserRuleCall_1; }

		//string_var
		public RuleCall getString_varParserRuleCall_2() { return cString_varParserRuleCall_2; }

		//fields+=field_decl
		public Assignment getFieldsAssignment_3() { return cFieldsAssignment_3; }

		//field_decl
		public RuleCall getFieldsField_declParserRuleCall_3_0() { return cFieldsField_declParserRuleCall_3_0; }
	}

	public class Ecl_integerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_integer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cINTEGERKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_integer:
		//	"INTEGER" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"INTEGER" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"INTEGER"
		public Keyword getINTEGERKeyword_0() { return cINTEGERKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_unsignedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_unsigned");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUNSIGNEDKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_unsigned:
		//	"UNSIGNED" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"UNSIGNED" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"UNSIGNED"
		public Keyword getUNSIGNEDKeyword_0() { return cUNSIGNEDKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_stringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_string");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSTRINGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_string:
		//	"STRING" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"STRING" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"STRING"
		public Keyword getSTRINGKeyword_0() { return cSTRINGKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_qstringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_qstring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQSTRINGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_qstring:
		//	"QSTRING" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"QSTRING" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"QSTRING"
		public Keyword getQSTRINGKeyword_0() { return cQSTRINGKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_varstringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_varstring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVARSTRINGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_varstring:
		//	"VARSTRING" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"VARSTRING" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"VARSTRING"
		public Keyword getVARSTRINGKeyword_0() { return cVARSTRINGKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_unicodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_unicode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUNICODEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_unicode:
		//	"UNICODE" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"UNICODE" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"UNICODE"
		public Keyword getUNICODEKeyword_0() { return cUNICODEKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_varunicodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_varunicode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVARUNICODEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ecl_varunicode:
		//	"VARUNICODE" INT? name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"VARUNICODE" INT? name=ID
		public Group getGroup() { return cGroup; }

		//"VARUNICODE"
		public Keyword getVARUNICODEKeyword_0() { return cVARUNICODEKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class Ecl_dataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDATAKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ecl_data:
		//	"DATA" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"DATA" name=ID
		public Group getGroup() { return cGroup; }

		//"DATA"
		public Keyword getDATAKeyword_0() { return cDATAKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class Ecl_realElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecl_real");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cREALKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ecl_real:
		//	"REAL" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"REAL" name=ID
		public Group getGroup() { return cGroup; }

		//"REAL"
		public Keyword getREALKeyword_0() { return cREALKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class Eclfield_typeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eclfield_type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEcl_integerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEcl_qstringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEcl_stringParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEcl_realParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEcl_unicodeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEcl_dataParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEcl_varstringParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cEcl_varunicodeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cEcl_unsignedParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//eclfield_type:
		//	ecl_integer | ecl_qstring | ecl_string | ecl_real | ecl_unicode | ecl_data | ecl_varstring | ecl_varunicode |
		//	ecl_unsigned;
		@Override public ParserRule getRule() { return rule; }

		//ecl_integer | ecl_qstring | ecl_string | ecl_real | ecl_unicode | ecl_data | ecl_varstring | ecl_varunicode |
		//ecl_unsigned
		public Alternatives getAlternatives() { return cAlternatives; }

		//ecl_integer
		public RuleCall getEcl_integerParserRuleCall_0() { return cEcl_integerParserRuleCall_0; }

		//ecl_qstring
		public RuleCall getEcl_qstringParserRuleCall_1() { return cEcl_qstringParserRuleCall_1; }

		//ecl_string
		public RuleCall getEcl_stringParserRuleCall_2() { return cEcl_stringParserRuleCall_2; }

		//ecl_real
		public RuleCall getEcl_realParserRuleCall_3() { return cEcl_realParserRuleCall_3; }

		//ecl_unicode
		public RuleCall getEcl_unicodeParserRuleCall_4() { return cEcl_unicodeParserRuleCall_4; }

		//ecl_data
		public RuleCall getEcl_dataParserRuleCall_5() { return cEcl_dataParserRuleCall_5; }

		//ecl_varstring
		public RuleCall getEcl_varstringParserRuleCall_6() { return cEcl_varstringParserRuleCall_6; }

		//ecl_varunicode
		public RuleCall getEcl_varunicodeParserRuleCall_7() { return cEcl_varunicodeParserRuleCall_7; }

		//ecl_unsigned
		public RuleCall getEcl_unsignedParserRuleCall_8() { return cEcl_unsignedParserRuleCall_8; }
	}

	public class Ecloutput_declElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ecloutput_decl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEclfield_typeParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOptionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOptionsOutput_optionsParserRuleCall_1_0 = (RuleCall)cOptionsAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ecloutput_decl:
		//	eclfield_type options+=output_options? ";";
		@Override public ParserRule getRule() { return rule; }

		//eclfield_type options+=output_options? ";"
		public Group getGroup() { return cGroup; }

		//eclfield_type
		public RuleCall getEclfield_typeParserRuleCall_0() { return cEclfield_typeParserRuleCall_0; }

		//options+=output_options?
		public Assignment getOptionsAssignment_1() { return cOptionsAssignment_1; }

		//output_options
		public RuleCall getOptionsOutput_optionsParserRuleCall_1_0() { return cOptionsOutput_optionsParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class Output_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "output_option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cNameSIDEKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cNameLARGEKeyword_0_1_0 = (Keyword)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final Keyword cNameSMALLKeyword_0_2_0 = (Keyword)cNameAssignment_0_2.eContents().get(0);
		private final Assignment cNameAssignment_0_3 = (Assignment)cAlternatives_0.eContents().get(3);
		private final Keyword cNameFEWKeyword_0_3_0 = (Keyword)cNameAssignment_0_3.eContents().get(0);
		private final Assignment cNameAssignment_0_4 = (Assignment)cAlternatives_0.eContents().get(4);
		private final Keyword cNameWUIDKeyword_0_4_0 = (Keyword)cNameAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameFROMKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cVarsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cVarsDatatypeCrossReference_1_2_0 = (CrossReference)cVarsAssignment_1_2.eContents().get(0);
		private final RuleCall cVarsDatatypeIDTerminalRuleCall_1_2_0_1 = (RuleCall)cVarsDatatypeCrossReference_1_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameDESCRIPTIONKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cValsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cValsValueParserRuleCall_2_2_0 = (RuleCall)cValsAssignment_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//output_option:
		//	(name="SIDE" | name="LARGE" | name="SMALL" | name="FEW" | name="WUID") | name="FROM" "(" vars+=[datatype] ")" |
		//	name="DESCRIPTION" "(" vals+=value ")";
		@Override public ParserRule getRule() { return rule; }

		//(name="SIDE" | name="LARGE" | name="SMALL" | name="FEW" | name="WUID") | name="FROM" "(" vars+=[datatype] ")" |
		//name="DESCRIPTION" "(" vals+=value ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="SIDE" | name="LARGE" | name="SMALL" | name="FEW" | name="WUID"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//name="SIDE"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"SIDE"
		public Keyword getNameSIDEKeyword_0_0_0() { return cNameSIDEKeyword_0_0_0; }

		//name="LARGE"
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//"LARGE"
		public Keyword getNameLARGEKeyword_0_1_0() { return cNameLARGEKeyword_0_1_0; }

		//name="SMALL"
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//"SMALL"
		public Keyword getNameSMALLKeyword_0_2_0() { return cNameSMALLKeyword_0_2_0; }

		//name="FEW"
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }

		//"FEW"
		public Keyword getNameFEWKeyword_0_3_0() { return cNameFEWKeyword_0_3_0; }

		//name="WUID"
		public Assignment getNameAssignment_0_4() { return cNameAssignment_0_4; }

		//"WUID"
		public Keyword getNameWUIDKeyword_0_4_0() { return cNameWUIDKeyword_0_4_0; }

		//name="FROM" "(" vars+=[datatype] ")"
		public Group getGroup_1() { return cGroup_1; }

		//name="FROM"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"FROM"
		public Keyword getNameFROMKeyword_1_0_0() { return cNameFROMKeyword_1_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//vars+=[datatype]
		public Assignment getVarsAssignment_1_2() { return cVarsAssignment_1_2; }

		//[datatype]
		public CrossReference getVarsDatatypeCrossReference_1_2_0() { return cVarsDatatypeCrossReference_1_2_0; }

		//ID
		public RuleCall getVarsDatatypeIDTerminalRuleCall_1_2_0_1() { return cVarsDatatypeIDTerminalRuleCall_1_2_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//name="DESCRIPTION" "(" vals+=value ")"
		public Group getGroup_2() { return cGroup_2; }

		//name="DESCRIPTION"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"DESCRIPTION"
		public Keyword getNameDESCRIPTIONKeyword_2_0_0() { return cNameDESCRIPTIONKeyword_2_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//vals+=value
		public Assignment getValsAssignment_2_2() { return cValsAssignment_2_2; }

		//value
		public RuleCall getValsValueParserRuleCall_2_2_0() { return cValsValueParserRuleCall_2_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}

	public class Output_optionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "output_options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cOutput_optionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOutput_internalAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOutput_internalOutput_optionParserRuleCall_2_1_0 = (RuleCall)cOutput_internalAssignment_2_1.eContents().get(0);
		
		//output_options:
		//	":" output_option ("," output_internal+=output_option)*;
		@Override public ParserRule getRule() { return rule; }

		//":" output_option ("," output_internal+=output_option)*
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//output_option
		public RuleCall getOutput_optionParserRuleCall_1() { return cOutput_optionParserRuleCall_1; }

		//("," output_internal+=output_option)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//output_internal+=output_option
		public Assignment getOutput_internalAssignment_2_1() { return cOutput_internalAssignment_2_1; }

		//output_option
		public RuleCall getOutput_internalOutput_optionParserRuleCall_2_1_0() { return cOutput_internalOutput_optionParserRuleCall_2_1_0; }
	}

	public class Out_typeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "out_type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cBOOLKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cINTKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cSTRINGKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cACTIONKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final RuleCall cValueParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//out_type:
		//	("BOOL" | "INT" | "STRING" | "ACTION")? value;
		@Override public ParserRule getRule() { return rule; }

		//("BOOL" | "INT" | "STRING" | "ACTION")? value
		public Group getGroup() { return cGroup; }

		//("BOOL" | "INT" | "STRING" | "ACTION")?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"BOOL"
		public Keyword getBOOLKeyword_0_0() { return cBOOLKeyword_0_0; }

		//"INT"
		public Keyword getINTKeyword_0_1() { return cINTKeyword_0_1; }

		//"STRING"
		public Keyword getSTRINGKeyword_0_2() { return cSTRINGKeyword_0_2; }

		//"ACTION"
		public Keyword getACTIONKeyword_0_3() { return cACTIONKeyword_0_3; }

		//value
		public RuleCall getValueParserRuleCall_1() { return cValueParserRuleCall_1; }
	}

	public class Output_valueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "output_value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cOut_typeParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Assignment cOpsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOpsOutput_optionsParserRuleCall_0_1_0 = (RuleCall)cOpsAssignment_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cDatasetParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cOut_baseAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOut_baseOutputbaseParserRuleCall_1_1_0 = (RuleCall)cOut_baseAssignment_1_1.eContents().get(0);
		private final Assignment cOpsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOpsOutput_optionsParserRuleCall_1_2_0 = (RuleCall)cOpsAssignment_1_2.eContents().get(0);
		private final Assignment cEcl_varsAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cEcl_varsEcloutput_declParserRuleCall_1_3_0 = (RuleCall)cEcl_varsAssignment_1_3.eContents().get(0);
		private final Keyword cENDKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cDatasetParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cOp_baseAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOp_baseOutputbaseParserRuleCall_2_1_0 = (RuleCall)cOp_baseAssignment_2_1.eContents().get(0);
		private final Assignment cOpsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOpsOutput_optionsParserRuleCall_2_2_0 = (RuleCall)cOpsAssignment_2_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//output_value:
		//	out_type ops+=output_options? ";" | dataset out_base+=outputbase? ops+=output_options? ecl_vars+=ecloutput_decl* "END"
		//	| dataset op_base+=outputbase? ops+=output_options? ";";
		@Override public ParserRule getRule() { return rule; }

		//out_type ops+=output_options? ";" | dataset out_base+=outputbase? ops+=output_options? ecl_vars+=ecloutput_decl* "END" |
		//dataset op_base+=outputbase? ops+=output_options? ";"
		public Alternatives getAlternatives() { return cAlternatives; }

		//out_type ops+=output_options? ";"
		public Group getGroup_0() { return cGroup_0; }

		//out_type
		public RuleCall getOut_typeParserRuleCall_0_0() { return cOut_typeParserRuleCall_0_0; }

		//ops+=output_options?
		public Assignment getOpsAssignment_0_1() { return cOpsAssignment_0_1; }

		//output_options
		public RuleCall getOpsOutput_optionsParserRuleCall_0_1_0() { return cOpsOutput_optionsParserRuleCall_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//dataset out_base+=outputbase? ops+=output_options? ecl_vars+=ecloutput_decl* "END"
		public Group getGroup_1() { return cGroup_1; }

		//dataset
		public RuleCall getDatasetParserRuleCall_1_0() { return cDatasetParserRuleCall_1_0; }

		//out_base+=outputbase?
		public Assignment getOut_baseAssignment_1_1() { return cOut_baseAssignment_1_1; }

		//outputbase
		public RuleCall getOut_baseOutputbaseParserRuleCall_1_1_0() { return cOut_baseOutputbaseParserRuleCall_1_1_0; }

		//ops+=output_options?
		public Assignment getOpsAssignment_1_2() { return cOpsAssignment_1_2; }

		//output_options
		public RuleCall getOpsOutput_optionsParserRuleCall_1_2_0() { return cOpsOutput_optionsParserRuleCall_1_2_0; }

		//ecl_vars+=ecloutput_decl*
		public Assignment getEcl_varsAssignment_1_3() { return cEcl_varsAssignment_1_3; }

		//ecloutput_decl
		public RuleCall getEcl_varsEcloutput_declParserRuleCall_1_3_0() { return cEcl_varsEcloutput_declParserRuleCall_1_3_0; }

		//"END"
		public Keyword getENDKeyword_1_4() { return cENDKeyword_1_4; }

		//dataset op_base+=outputbase? ops+=output_options? ";"
		public Group getGroup_2() { return cGroup_2; }

		//dataset
		public RuleCall getDatasetParserRuleCall_2_0() { return cDatasetParserRuleCall_2_0; }

		//op_base+=outputbase?
		public Assignment getOp_baseAssignment_2_1() { return cOp_baseAssignment_2_1; }

		//outputbase
		public RuleCall getOp_baseOutputbaseParserRuleCall_2_1_0() { return cOp_baseOutputbaseParserRuleCall_2_1_0; }

		//ops+=output_options?
		public Assignment getOpsAssignment_2_2() { return cOpsAssignment_2_2; }

		//output_options
		public RuleCall getOpsOutput_optionsParserRuleCall_2_2_0() { return cOpsOutput_optionsParserRuleCall_2_2_0; }

		//";"
		public Keyword getSemicolonKeyword_2_3() { return cSemicolonKeyword_2_3; }
	}

	public class OutputbaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "outputbase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cActionsDatasetCrossReference_1_0 = (CrossReference)cActionsAssignment_1.eContents().get(0);
		private final RuleCall cActionsDatasetIDTerminalRuleCall_1_0_1 = (RuleCall)cActionsDatasetCrossReference_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//outputbase:
		//	"(" actions=[dataset] ")";
		@Override public ParserRule getRule() { return rule; }

		//"(" actions=[dataset] ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//actions=[dataset]
		public Assignment getActionsAssignment_1() { return cActionsAssignment_1; }

		//[dataset]
		public CrossReference getActionsDatasetCrossReference_1_0() { return cActionsDatasetCrossReference_1_0; }

		//ID
		public RuleCall getActionsDatasetIDTerminalRuleCall_1_0_1() { return cActionsDatasetIDTerminalRuleCall_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class Generate_sectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "generate_section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameGENERATESKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyGenerate_bodyParserRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		private final Keyword cENDGENERATESKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//generate_section:
		//	name="GENERATES" body+=generate_body "ENDGENERATES";
		@Override public ParserRule getRule() { return rule; }

		//name="GENERATES" body+=generate_body "ENDGENERATES"
		public Group getGroup() { return cGroup; }

		//name="GENERATES"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"GENERATES"
		public Keyword getNameGENERATESKeyword_0_0() { return cNameGENERATESKeyword_0_0; }

		//body+=generate_body
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }

		//generate_body
		public RuleCall getBodyGenerate_bodyParserRuleCall_1_0() { return cBodyGenerate_bodyParserRuleCall_1_0; }

		//"ENDGENERATES"
		public Keyword getENDGENERATESKeyword_2() { return cENDGENERATESKeyword_2; }
	}

	public class Generate_bodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "generate_body");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cNameINLINEKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0_1_0 = (RuleCall)cAlternatives_0_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_0_1_1 = (RuleCall)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0_1_2 = (RuleCall)cAlternatives_0_1.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_0_1_3 = (RuleCall)cAlternatives_0_1.eContents().get(3);
		private final RuleCall cECL_CODETerminalRuleCall_0_1_4 = (RuleCall)cAlternatives_0_1.eContents().get(4);
		private final Keyword cSemicolonKeyword_0_1_5 = (Keyword)cAlternatives_0_1.eContents().get(5);
		private final Keyword cFullStopKeyword_0_1_6 = (Keyword)cAlternatives_0_1.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_0_1_7 = (Keyword)cAlternatives_0_1.eContents().get(7);
		private final Keyword cRightParenthesisKeyword_0_1_8 = (Keyword)cAlternatives_0_1.eContents().get(8);
		private final Keyword cCommaKeyword_0_1_9 = (Keyword)cAlternatives_0_1.eContents().get(9);
		private final Keyword cColonKeyword_0_1_10 = (Keyword)cAlternatives_0_1.eContents().get(10);
		private final Keyword cEqualsSignKeyword_0_1_11 = (Keyword)cAlternatives_0_1.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_0_1_12 = (Keyword)cAlternatives_0_1.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_0_1_13 = (Keyword)cAlternatives_0_1.eContents().get(13);
		private final Keyword cHyphenMinusKeyword_0_1_14 = (Keyword)cAlternatives_0_1.eContents().get(14);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cNameSALTKeyword_1_0_0 = (Keyword)cNameAssignment_1_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cColonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Alternatives cAlternatives_1_5 = (Alternatives)cGroup_1.eContents().get(5);
		private final Keyword cSCOREDSEARCHKeyword_1_5_0 = (Keyword)cAlternatives_1_5.eContents().get(0);
		private final Keyword cPROFILEKeyword_1_5_1 = (Keyword)cAlternatives_1_5.eContents().get(1);
		
		//generate_body:
		//	name="INLINE" (ID | INT | WS | STRING | ECL_CODE | ";" | "." | "(" | ")" | "," | ":" | "=" | "{" | "}" | "-")* |
		//	name="SALT" "(" ID ")" ":" ("SCOREDSEARCH" | "PROFILE");
		@Override public ParserRule getRule() { return rule; }

		//name="INLINE" (ID | INT | WS | STRING | ECL_CODE | ";" | "." | "(" | ")" | "," | ":" | "=" | "{" | "}" | "-")* |
		//name="SALT" "(" ID ")" ":" ("SCOREDSEARCH" | "PROFILE")
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="INLINE" (ID | INT | WS | STRING | ECL_CODE | ";" | "." | "(" | ")" | "," | ":" | "=" | "{" | "}" | "-")*
		public Group getGroup_0() { return cGroup_0; }

		//name="INLINE"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"INLINE"
		public Keyword getNameINLINEKeyword_0_0_0() { return cNameINLINEKeyword_0_0_0; }

		//(ID | INT | WS | STRING | ECL_CODE | ";" | "." | "(" | ")" | "," | ":" | "=" | "{" | "}" | "-")*
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_1_0() { return cIDTerminalRuleCall_0_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_0_1_1() { return cINTTerminalRuleCall_0_1_1; }

		//WS
		public RuleCall getWSTerminalRuleCall_0_1_2() { return cWSTerminalRuleCall_0_1_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0_1_3() { return cSTRINGTerminalRuleCall_0_1_3; }

		//ECL_CODE
		public RuleCall getECL_CODETerminalRuleCall_0_1_4() { return cECL_CODETerminalRuleCall_0_1_4; }

		//";"
		public Keyword getSemicolonKeyword_0_1_5() { return cSemicolonKeyword_0_1_5; }

		//"."
		public Keyword getFullStopKeyword_0_1_6() { return cFullStopKeyword_0_1_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_1_7() { return cLeftParenthesisKeyword_0_1_7; }

		//")"
		public Keyword getRightParenthesisKeyword_0_1_8() { return cRightParenthesisKeyword_0_1_8; }

		//","
		public Keyword getCommaKeyword_0_1_9() { return cCommaKeyword_0_1_9; }

		//":"
		public Keyword getColonKeyword_0_1_10() { return cColonKeyword_0_1_10; }

		//"="
		public Keyword getEqualsSignKeyword_0_1_11() { return cEqualsSignKeyword_0_1_11; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_1_12() { return cLeftCurlyBracketKeyword_0_1_12; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_0_1_13() { return cRightCurlyBracketKeyword_0_1_13; }

		//"-"
		public Keyword getHyphenMinusKeyword_0_1_14() { return cHyphenMinusKeyword_0_1_14; }

		//name="SALT" "(" ID ")" ":" ("SCOREDSEARCH" | "PROFILE")
		public Group getGroup_1() { return cGroup_1; }

		//name="SALT"
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//"SALT"
		public Keyword getNameSALTKeyword_1_0_0() { return cNameSALTKeyword_1_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_2() { return cIDTerminalRuleCall_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//":"
		public Keyword getColonKeyword_1_4() { return cColonKeyword_1_4; }

		//"SCOREDSEARCH" | "PROFILE"
		public Alternatives getAlternatives_1_5() { return cAlternatives_1_5; }

		//"SCOREDSEARCH"
		public Keyword getSCOREDSEARCHKeyword_1_5_0() { return cSCOREDSEARCHKeyword_1_5_0; }

		//"PROFILE"
		public Keyword getPROFILEKeyword_1_5_1() { return cPROFILEKeyword_1_5_1; }
	}

	public class Visual_sectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visual_section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameVISUALIZEKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cVis_opsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVis_opsVisual_section_optionsParserRuleCall_2_0 = (RuleCall)cVis_opsAssignment_2.eContents().get(0);
		private final Assignment cVis_elementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVis_elementsVisualizationParserRuleCall_3_0 = (RuleCall)cVis_elementsAssignment_3.eContents().get(0);
		private final Keyword cENDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//visual_section:
		//	name="VISUALIZE" ID vis_ops+=visual_section_options? vis_elements+=visualization+ "END";
		@Override public ParserRule getRule() { return rule; }

		//name="VISUALIZE" ID vis_ops+=visual_section_options? vis_elements+=visualization+ "END"
		public Group getGroup() { return cGroup; }

		//name="VISUALIZE"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"VISUALIZE"
		public Keyword getNameVISUALIZEKeyword_0_0() { return cNameVISUALIZEKeyword_0_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//vis_ops+=visual_section_options?
		public Assignment getVis_opsAssignment_2() { return cVis_opsAssignment_2; }

		//visual_section_options
		public RuleCall getVis_opsVisual_section_optionsParserRuleCall_2_0() { return cVis_opsVisual_section_optionsParserRuleCall_2_0; }

		//vis_elements+=visualization+
		public Assignment getVis_elementsAssignment_3() { return cVis_elementsAssignment_3; }

		//visualization
		public RuleCall getVis_elementsVisualizationParserRuleCall_3_0() { return cVis_elementsVisualizationParserRuleCall_3_0; }

		//"END"
		public Keyword getENDKeyword_4() { return cENDKeyword_4; }
	}

	public class VisualizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visualization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cCHOROKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cLINEKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cTIMELINEKeyword_0_0_2 = (Keyword)cAlternatives_0_0.eContents().get(2);
		private final Keyword cPIEKeyword_0_0_3 = (Keyword)cAlternatives_0_0.eContents().get(3);
		private final Keyword cBARKeyword_0_0_4 = (Keyword)cAlternatives_0_0.eContents().get(4);
		private final Keyword cTABLEKeyword_0_0_5 = (Keyword)cAlternatives_0_0.eContents().get(5);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cInputsAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cInputsVis_basisParserRuleCall_0_3_0 = (RuleCall)cInputsAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cVis_opsAssignment_0_5 = (Assignment)cGroup_0.eContents().get(5);
		private final RuleCall cVis_opsVisual_optionsParserRuleCall_0_5_0 = (RuleCall)cVis_opsAssignment_0_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSLIDERKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Assignment cVis_opsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cVis_opsVisual_optionsParserRuleCall_1_2_0 = (RuleCall)cVis_opsAssignment_1_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//visualization:
		//	("CHORO" | "LINE" | "TIMELINE" | "PIE" | "BAR" | "TABLE") name=ID "(" inputs+=vis_basis ")" vis_ops+=visual_options?
		//	";" | "SLIDER" name=ID vis_ops+=visual_options? ";";
		@Override public ParserRule getRule() { return rule; }

		//("CHORO" | "LINE" | "TIMELINE" | "PIE" | "BAR" | "TABLE") name=ID "(" inputs+=vis_basis ")" vis_ops+=visual_options? ";"
		//| "SLIDER" name=ID vis_ops+=visual_options? ";"
		public Alternatives getAlternatives() { return cAlternatives; }

		//("CHORO" | "LINE" | "TIMELINE" | "PIE" | "BAR" | "TABLE") name=ID "(" inputs+=vis_basis ")" vis_ops+=visual_options? ";"
		public Group getGroup_0() { return cGroup_0; }

		//"CHORO" | "LINE" | "TIMELINE" | "PIE" | "BAR" | "TABLE"
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//"CHORO"
		public Keyword getCHOROKeyword_0_0_0() { return cCHOROKeyword_0_0_0; }

		//"LINE"
		public Keyword getLINEKeyword_0_0_1() { return cLINEKeyword_0_0_1; }

		//"TIMELINE"
		public Keyword getTIMELINEKeyword_0_0_2() { return cTIMELINEKeyword_0_0_2; }

		//"PIE"
		public Keyword getPIEKeyword_0_0_3() { return cPIEKeyword_0_0_3; }

		//"BAR"
		public Keyword getBARKeyword_0_0_4() { return cBARKeyword_0_0_4; }

		//"TABLE"
		public Keyword getTABLEKeyword_0_0_5() { return cTABLEKeyword_0_0_5; }

		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//inputs+=vis_basis
		public Assignment getInputsAssignment_0_3() { return cInputsAssignment_0_3; }

		//vis_basis
		public RuleCall getInputsVis_basisParserRuleCall_0_3_0() { return cInputsVis_basisParserRuleCall_0_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }

		//vis_ops+=visual_options?
		public Assignment getVis_opsAssignment_0_5() { return cVis_opsAssignment_0_5; }

		//visual_options
		public RuleCall getVis_opsVisual_optionsParserRuleCall_0_5_0() { return cVis_opsVisual_optionsParserRuleCall_0_5_0; }

		//";"
		public Keyword getSemicolonKeyword_0_6() { return cSemicolonKeyword_0_6; }

		//"SLIDER" name=ID vis_ops+=visual_options? ";"
		public Group getGroup_1() { return cGroup_1; }

		//"SLIDER"
		public Keyword getSLIDERKeyword_1_0() { return cSLIDERKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//vis_ops+=visual_options?
		public Assignment getVis_opsAssignment_1_2() { return cVis_opsAssignment_1_2; }

		//visual_options
		public RuleCall getVis_opsVisual_optionsParserRuleCall_1_2_0() { return cVis_opsVisual_optionsParserRuleCall_1_2_0; }

		//";"
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
	}

	public class Vis_basisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "vis_basis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVarsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cVarsDatasetCrossReference_0_0 = (CrossReference)cVarsAssignment_0.eContents().get(0);
		private final RuleCall cVarsDatasetIDTerminalRuleCall_0_0_1 = (RuleCall)cVarsDatasetCrossReference_0_0.eContents().get(1);
		private final Assignment cQualsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cQualsVis_basis_qualifiersParserRuleCall_1_0 = (RuleCall)cQualsAssignment_1.eContents().get(0);
		
		//vis_basis:
		//	vars+=[dataset] quals+=vis_basis_qualifiers?;
		@Override public ParserRule getRule() { return rule; }

		//vars+=[dataset] quals+=vis_basis_qualifiers?
		public Group getGroup() { return cGroup; }

		//vars+=[dataset]
		public Assignment getVarsAssignment_0() { return cVarsAssignment_0; }

		//[dataset]
		public CrossReference getVarsDatasetCrossReference_0_0() { return cVarsDatasetCrossReference_0_0; }

		//ID
		public RuleCall getVarsDatasetIDTerminalRuleCall_0_0_1() { return cVarsDatasetIDTerminalRuleCall_0_0_1; }

		//quals+=vis_basis_qualifiers?
		public Assignment getQualsAssignment_1() { return cQualsAssignment_1; }

		//vis_basis_qualifiers
		public RuleCall getQualsVis_basis_qualifiersParserRuleCall_1_0() { return cQualsVis_basis_qualifiersParserRuleCall_1_0; }
	}

	public class Vis_basis_qualifiersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "vis_basis_qualifiers");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFunctionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFuncsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFuncsFunctionParserRuleCall_2_1_0 = (RuleCall)cFuncsAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//vis_basis_qualifiers:
		//	"{" function ("," funcs+=function)* "}";
		@Override public ParserRule getRule() { return rule; }

		//"{" function ("," funcs+=function)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//function
		public RuleCall getFunctionParserRuleCall_1() { return cFunctionParserRuleCall_1; }

		//("," funcs+=function)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//funcs+=function
		public Assignment getFuncsAssignment_2_1() { return cFuncsAssignment_2_1; }

		//function
		public RuleCall getFuncsFunctionParserRuleCall_2_1_0() { return cFuncsFunctionParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "function");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSUMKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_1_2_0 = (RuleCall)cNameAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cSCALEKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		
		//function:
		//	value | "SUM" "(" name=ID ")" | "SCALE" "(" name=ID "," INT ")";
		@Override public ParserRule getRule() { return rule; }

		//value | "SUM" "(" name=ID ")" | "SCALE" "(" name=ID "," INT ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value
		public RuleCall getValueParserRuleCall_0() { return cValueParserRuleCall_0; }

		//"SUM" "(" name=ID ")"
		public Group getGroup_1() { return cGroup_1; }

		//"SUM"
		public Keyword getSUMKeyword_1_0() { return cSUMKeyword_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//name=ID
		public Assignment getNameAssignment_1_2() { return cNameAssignment_1_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_2_0() { return cNameIDTerminalRuleCall_1_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//"SCALE" "(" name=ID "," INT ")"
		public Group getGroup_2() { return cGroup_2; }

		//"SCALE"
		public Keyword getSCALEKeyword_2_0() { return cSCALEKeyword_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }

		//","
		public Keyword getCommaKeyword_2_3() { return cCommaKeyword_2_3; }

		//INT
		public RuleCall getINTTerminalRuleCall_2_4() { return cINTTerminalRuleCall_2_4; }

		//")"
		public Keyword getRightParenthesisKeyword_2_5() { return cRightParenthesisKeyword_2_5; }
	}

	public class Visual_section_optionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visual_section_options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cVisual_section_optionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVis_opsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVis_opsVisual_section_optionParserRuleCall_2_1_0 = (RuleCall)cVis_opsAssignment_2_1.eContents().get(0);
		
		//visual_section_options:
		//	":" visual_section_option ("," vis_ops+=visual_section_option)*;
		@Override public ParserRule getRule() { return rule; }

		//":" visual_section_option ("," vis_ops+=visual_section_option)*
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//visual_section_option
		public RuleCall getVisual_section_optionParserRuleCall_1() { return cVisual_section_optionParserRuleCall_1; }

		//("," vis_ops+=visual_section_option)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//vis_ops+=visual_section_option
		public Assignment getVis_opsAssignment_2_1() { return cVis_opsAssignment_2_1; }

		//visual_section_option
		public RuleCall getVis_opsVisual_section_optionParserRuleCall_2_1_0() { return cVis_opsVisual_section_optionParserRuleCall_2_1_0; }
	}

	public class Visual_section_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visual_section_option");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameLABELKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValsValueParserRuleCall_2_0 = (RuleCall)cValsAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//visual_section_option:
		//	name="LABEL" "(" vals+=value ")";
		@Override public ParserRule getRule() { return rule; }

		//name="LABEL" "(" vals+=value ")"
		public Group getGroup() { return cGroup; }

		//name="LABEL"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"LABEL"
		public Keyword getNameLABELKeyword_0_0() { return cNameLABELKeyword_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//vals+=value
		public Assignment getValsAssignment_2() { return cValsAssignment_2; }

		//value
		public RuleCall getValsValueParserRuleCall_2_0() { return cValsValueParserRuleCall_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class Visual_optionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visual_options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cVisual_optionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVis_opsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVis_opsVisual_optionParserRuleCall_2_1_0 = (RuleCall)cVis_opsAssignment_2_1.eContents().get(0);
		
		//visual_options:
		//	":" visual_option ("," vis_ops+=visual_option)*;
		@Override public ParserRule getRule() { return rule; }

		//":" visual_option ("," vis_ops+=visual_option)*
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//visual_option
		public RuleCall getVisual_optionParserRuleCall_1() { return cVisual_optionParserRuleCall_1; }

		//("," vis_ops+=visual_option)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//vis_ops+=visual_option
		public Assignment getVis_opsAssignment_2_1() { return cVis_opsAssignment_2_1; }

		//visual_option
		public RuleCall getVis_opsVisual_optionParserRuleCall_2_1_0() { return cVis_opsVisual_optionParserRuleCall_2_1_0; }
	}

	public class Visual_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visual_option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0 = (Assignment)cAlternatives_0_0.eContents().get(0);
		private final Keyword cNameTITLEKeyword_0_0_0_0 = (Keyword)cNameAssignment_0_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_1 = (Assignment)cAlternatives_0_0.eContents().get(1);
		private final Keyword cNameDATEKeyword_0_0_1_0 = (Keyword)cNameAssignment_0_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_0_2 = (Assignment)cAlternatives_0_0.eContents().get(2);
		private final Keyword cNameDESCRIPTIONKeyword_0_0_2_0 = (Keyword)cNameAssignment_0_0_2.eContents().get(0);
		private final Assignment cNameAssignment_0_0_3 = (Assignment)cAlternatives_0_0.eContents().get(3);
		private final Keyword cNamePICTUREKeyword_0_0_3_0 = (Keyword)cNameAssignment_0_0_3.eContents().get(0);
		private final Assignment cNameAssignment_0_0_4 = (Assignment)cAlternatives_0_0.eContents().get(4);
		private final Keyword cNameSTATEKeyword_0_0_4_0 = (Keyword)cNameAssignment_0_0_4.eContents().get(0);
		private final Assignment cNameAssignment_0_0_5 = (Assignment)cAlternatives_0_0.eContents().get(5);
		private final Keyword cNameCOUNTYKeyword_0_0_5_0 = (Keyword)cNameAssignment_0_0_5.eContents().get(0);
		private final Assignment cNameAssignment_0_0_6 = (Assignment)cAlternatives_0_0.eContents().get(6);
		private final Keyword cNameWEIGHTKeyword_0_0_6_0 = (Keyword)cNameAssignment_0_0_6.eContents().get(0);
		private final Assignment cNameAssignment_0_0_7 = (Assignment)cAlternatives_0_0.eContents().get(7);
		private final Keyword cNameSIZEKeyword_0_0_7_0 = (Keyword)cNameAssignment_0_0_7.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cFuncsAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cFuncsFunctionParserRuleCall_0_2_0 = (RuleCall)cFuncsAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cVisual_multivalParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cFuncsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cFuncsFunctionParserRuleCall_1_2_0 = (RuleCall)cFuncsAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cCommaKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cFuncsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cFuncsFunctionParserRuleCall_1_3_1_0 = (RuleCall)cFuncsAssignment_1_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNameAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNameSELECTSKeyword_2_0_0 = (Keyword)cNameAssignment_2_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final RuleCall cIDTerminalRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		private final Keyword cRightParenthesisKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		
		//visual_option:
		//	(name="TITLE" | name="DATE" | name="DESCRIPTION" | name="PICTURE" | name="STATE" | name="COUNTY" | name="WEIGHT" |
		//	name="SIZE") "(" funcs+=function ")" | visual_multival "(" funcs+=function ("," funcs+=function)* ")" | name="SELECTS"
		//	"(" ID "->" ID ")";
		@Override public ParserRule getRule() { return rule; }

		//(name="TITLE" | name="DATE" | name="DESCRIPTION" | name="PICTURE" | name="STATE" | name="COUNTY" | name="WEIGHT" |
		//name="SIZE") "(" funcs+=function ")" | visual_multival "(" funcs+=function ("," funcs+=function)* ")" | name="SELECTS"
		//"(" ID "->" ID ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//(name="TITLE" | name="DATE" | name="DESCRIPTION" | name="PICTURE" | name="STATE" | name="COUNTY" | name="WEIGHT" |
		//name="SIZE") "(" funcs+=function ")"
		public Group getGroup_0() { return cGroup_0; }

		//name="TITLE" | name="DATE" | name="DESCRIPTION" | name="PICTURE" | name="STATE" | name="COUNTY" | name="WEIGHT" |
		//name="SIZE"
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//name="TITLE"
		public Assignment getNameAssignment_0_0_0() { return cNameAssignment_0_0_0; }

		//"TITLE"
		public Keyword getNameTITLEKeyword_0_0_0_0() { return cNameTITLEKeyword_0_0_0_0; }

		//name="DATE"
		public Assignment getNameAssignment_0_0_1() { return cNameAssignment_0_0_1; }

		//"DATE"
		public Keyword getNameDATEKeyword_0_0_1_0() { return cNameDATEKeyword_0_0_1_0; }

		//name="DESCRIPTION"
		public Assignment getNameAssignment_0_0_2() { return cNameAssignment_0_0_2; }

		//"DESCRIPTION"
		public Keyword getNameDESCRIPTIONKeyword_0_0_2_0() { return cNameDESCRIPTIONKeyword_0_0_2_0; }

		//name="PICTURE"
		public Assignment getNameAssignment_0_0_3() { return cNameAssignment_0_0_3; }

		//"PICTURE"
		public Keyword getNamePICTUREKeyword_0_0_3_0() { return cNamePICTUREKeyword_0_0_3_0; }

		//name="STATE"
		public Assignment getNameAssignment_0_0_4() { return cNameAssignment_0_0_4; }

		//"STATE"
		public Keyword getNameSTATEKeyword_0_0_4_0() { return cNameSTATEKeyword_0_0_4_0; }

		//name="COUNTY"
		public Assignment getNameAssignment_0_0_5() { return cNameAssignment_0_0_5; }

		//"COUNTY"
		public Keyword getNameCOUNTYKeyword_0_0_5_0() { return cNameCOUNTYKeyword_0_0_5_0; }

		//name="WEIGHT"
		public Assignment getNameAssignment_0_0_6() { return cNameAssignment_0_0_6; }

		//"WEIGHT"
		public Keyword getNameWEIGHTKeyword_0_0_6_0() { return cNameWEIGHTKeyword_0_0_6_0; }

		//name="SIZE"
		public Assignment getNameAssignment_0_0_7() { return cNameAssignment_0_0_7; }

		//"SIZE"
		public Keyword getNameSIZEKeyword_0_0_7_0() { return cNameSIZEKeyword_0_0_7_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }

		//funcs+=function
		public Assignment getFuncsAssignment_0_2() { return cFuncsAssignment_0_2; }

		//function
		public RuleCall getFuncsFunctionParserRuleCall_0_2_0() { return cFuncsFunctionParserRuleCall_0_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }

		//visual_multival "(" funcs+=function ("," funcs+=function)* ")"
		public Group getGroup_1() { return cGroup_1; }

		//visual_multival
		public RuleCall getVisual_multivalParserRuleCall_1_0() { return cVisual_multivalParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//funcs+=function
		public Assignment getFuncsAssignment_1_2() { return cFuncsAssignment_1_2; }

		//function
		public RuleCall getFuncsFunctionParserRuleCall_1_2_0() { return cFuncsFunctionParserRuleCall_1_2_0; }

		//("," funcs+=function)*
		public Group getGroup_1_3() { return cGroup_1_3; }

		//","
		public Keyword getCommaKeyword_1_3_0() { return cCommaKeyword_1_3_0; }

		//funcs+=function
		public Assignment getFuncsAssignment_1_3_1() { return cFuncsAssignment_1_3_1; }

		//function
		public RuleCall getFuncsFunctionParserRuleCall_1_3_1_0() { return cFuncsFunctionParserRuleCall_1_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }

		//name="SELECTS" "(" ID "->" ID ")"
		public Group getGroup_2() { return cGroup_2; }

		//name="SELECTS"
		public Assignment getNameAssignment_2_0() { return cNameAssignment_2_0; }

		//"SELECTS"
		public Keyword getNameSELECTSKeyword_2_0_0() { return cNameSELECTSKeyword_2_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_2() { return cIDTerminalRuleCall_2_2; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_3() { return cHyphenMinusGreaterThanSignKeyword_2_3; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_4() { return cIDTerminalRuleCall_2_4; }

		//")"
		public Keyword getRightParenthesisKeyword_2_5() { return cRightParenthesisKeyword_2_5; }
	}

	public class Visual_multivalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "visual_multival");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cNameXKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cNameYKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cNameCOLORKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cNameRANGEKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cNameFILTERKeyword_4_0 = (Keyword)cNameAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cNameLABELKeyword_5_0 = (Keyword)cNameAssignment_5.eContents().get(0);
		private final Assignment cNameAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cNameVALUEKeyword_6_0 = (Keyword)cNameAssignment_6.eContents().get(0);
		
		//visual_multival:
		//	name="X" | name="Y" | name="COLOR" | name="RANGE" | name="FILTER" | name="LABEL" | name="VALUE";
		@Override public ParserRule getRule() { return rule; }

		//name="X" | name="Y" | name="COLOR" | name="RANGE" | name="FILTER" | name="LABEL" | name="VALUE"
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="X"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"X"
		public Keyword getNameXKeyword_0_0() { return cNameXKeyword_0_0; }

		//name="Y"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"Y"
		public Keyword getNameYKeyword_1_0() { return cNameYKeyword_1_0; }

		//name="COLOR"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"COLOR"
		public Keyword getNameCOLORKeyword_2_0() { return cNameCOLORKeyword_2_0; }

		//name="RANGE"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"RANGE"
		public Keyword getNameRANGEKeyword_3_0() { return cNameRANGEKeyword_3_0; }

		//name="FILTER"
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//"FILTER"
		public Keyword getNameFILTERKeyword_4_0() { return cNameFILTERKeyword_4_0; }

		//name="LABEL"
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//"LABEL"
		public Keyword getNameLABELKeyword_5_0() { return cNameLABELKeyword_5_0; }

		//name="VALUE"
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//"VALUE"
		public Keyword getNameVALUEKeyword_6_0() { return cNameVALUEKeyword_6_0; }
	}

	public class Custom_sectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "custom_section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameCUSTOMKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cCust_valsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCust_valsCustom_valueParserRuleCall_1_0 = (RuleCall)cCust_valsAssignment_1.eContents().get(0);
		private final Keyword cENDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//custom_section:
		//	name="CUSTOM" cust_vals+=custom_value* "END";
		@Override public ParserRule getRule() { return rule; }

		//name="CUSTOM" cust_vals+=custom_value* "END"
		public Group getGroup() { return cGroup; }

		//name="CUSTOM"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"CUSTOM"
		public Keyword getNameCUSTOMKeyword_0_0() { return cNameCUSTOMKeyword_0_0; }

		//cust_vals+=custom_value*
		public Assignment getCust_valsAssignment_1() { return cCust_valsAssignment_1; }

		//custom_value
		public RuleCall getCust_valsCustom_valueParserRuleCall_1_0() { return cCust_valsCustom_valueParserRuleCall_1_0; }

		//"END"
		public Keyword getENDKeyword_2() { return cENDKeyword_2; }
	}

	public class Custom_valueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "custom_value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValueParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//custom_value:
		//	ID value ";";
		@Override public ParserRule getRule() { return rule; }

		//ID value ";"
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//value
		public RuleCall getValueParserRuleCall_1() { return cValueParserRuleCall_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class Resource_optionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "resource_option");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cNameDESCRIPTIONKeyword_0_0_0 = (Keyword)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cNameFILEKeyword_0_1_0 = (Keyword)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final Keyword cNameLABELKeyword_0_2_0 = (Keyword)cNameAssignment_0_2.eContents().get(0);
		private final Assignment cNameAssignment_0_3 = (Assignment)cAlternatives_0.eContents().get(3);
		private final Keyword cName_HTML_STYLECLASSKeyword_0_3_0 = (Keyword)cNameAssignment_0_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValsValueParserRuleCall_2_0 = (RuleCall)cValsAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//resource_option:
		//	(name="DESCRIPTION" | name="FILE" | name="LABEL" | name="_HTML_STYLECLASS") "(" vals+=value ")";
		@Override public ParserRule getRule() { return rule; }

		//(name="DESCRIPTION" | name="FILE" | name="LABEL" | name="_HTML_STYLECLASS") "(" vals+=value ")"
		public Group getGroup() { return cGroup; }

		//name="DESCRIPTION" | name="FILE" | name="LABEL" | name="_HTML_STYLECLASS"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//name="DESCRIPTION"
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//"DESCRIPTION"
		public Keyword getNameDESCRIPTIONKeyword_0_0_0() { return cNameDESCRIPTIONKeyword_0_0_0; }

		//name="FILE"
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//"FILE"
		public Keyword getNameFILEKeyword_0_1_0() { return cNameFILEKeyword_0_1_0; }

		//name="LABEL"
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//"LABEL"
		public Keyword getNameLABELKeyword_0_2_0() { return cNameLABELKeyword_0_2_0; }

		//name="_HTML_STYLECLASS"
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }

		//"_HTML_STYLECLASS"
		public Keyword getName_HTML_STYLECLASSKeyword_0_3_0() { return cName_HTML_STYLECLASSKeyword_0_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//vals+=value
		public Assignment getValsAssignment_2() { return cValsAssignment_2; }

		//value
		public RuleCall getValsValueParserRuleCall_2_0() { return cValsValueParserRuleCall_2_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class Resource_optionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "resource_options");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cResource_optionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRes_opsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRes_opsResource_optionParserRuleCall_1_1_0 = (RuleCall)cRes_opsAssignment_1_1.eContents().get(0);
		
		//resource_options:
		//	resource_option ("," res_ops+=resource_option)*;
		@Override public ParserRule getRule() { return rule; }

		//resource_option ("," res_ops+=resource_option)*
		public Group getGroup() { return cGroup; }

		//resource_option
		public RuleCall getResource_optionParserRuleCall_0() { return cResource_optionParserRuleCall_0; }

		//("," res_ops+=resource_option)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//res_ops+=resource_option
		public Assignment getRes_opsAssignment_1_1() { return cRes_opsAssignment_1_1; }

		//resource_option
		public RuleCall getRes_opsResource_optionParserRuleCall_1_1_0() { return cRes_opsResource_optionParserRuleCall_1_1_0; }
	}

	public class Resource_valueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "resource_value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRes_opsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRes_opsResource_optionsParserRuleCall_2_0 = (RuleCall)cRes_opsAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//resource_value:
		//	value ":" res_ops+=resource_options? ";";
		@Override public ParserRule getRule() { return rule; }

		//value ":" res_ops+=resource_options? ";"
		public Group getGroup() { return cGroup; }

		//value
		public RuleCall getValueParserRuleCall_0() { return cValueParserRuleCall_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//res_ops+=resource_options?
		public Assignment getRes_opsAssignment_2() { return cRes_opsAssignment_2; }

		//resource_options
		public RuleCall getRes_opsResource_optionsParserRuleCall_2_0() { return cRes_opsResource_optionsParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class Resource_sectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "resource_section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNameRESOURCESKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Assignment cRes_valsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRes_valsResource_valueParserRuleCall_1_0 = (RuleCall)cRes_valsAssignment_1.eContents().get(0);
		private final Keyword cENDKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//resource_section:
		//	name="RESOURCES" res_vals+=resource_value+ "END";
		@Override public ParserRule getRule() { return rule; }

		//name="RESOURCES" res_vals+=resource_value+ "END"
		public Group getGroup() { return cGroup; }

		//name="RESOURCES"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"RESOURCES"
		public Keyword getNameRESOURCESKeyword_0_0() { return cNameRESOURCESKeyword_0_0; }

		//res_vals+=resource_value+
		public Assignment getRes_valsAssignment_1() { return cRes_valsAssignment_1; }

		//resource_value
		public RuleCall getRes_valsResource_valueParserRuleCall_1_0() { return cRes_valsResource_valueParserRuleCall_1_0; }

		//"END"
		public Keyword getENDKeyword_2() { return cENDKeyword_2; }
	}
	
	
	private final ProgramElements pProgram;
	private final Base_propElements pBase_prop;
	private final Category_typeElements pCategory_type;
	private final Category_type_listElements pCategory_type_list;
	private final ValueElements pValue;
	private final Value_listElements pValue_list;
	private final ID_listElements pID_list;
	private final AssignElements pAssign;
	private final Assign_listElements pAssign_list;
	private final Composition_headerElements pComposition_header;
	private final Contract_instanceElements pContract_instance;
	private final Field_declElements pField_decl;
	private final Enum_declElements pEnum_decl;
	private final Input_sectionElements pInput_section;
	private final BoolElements pBool;
	private final Int_varElements pInt_var;
	private final String_varElements pString_var;
	private final RecordElements pRecord;
	private final DatasetElements pDataset;
	private final GroupElements pGroup;
	private final DatatypeElements pDatatype;
	private final Input_valueElements pInput_value;
	private final Input_optionsElements pInput_options;
	private final Input_optionElements pInput_option;
	private final Formfield_optionElements pFormfield_option;
	private final Inputtype_optionElements pInputtype_option;
	private final Inputtype_optionsElements pInputtype_options;
	private final Output_sectionElements pOutput_section;
	private final Outfield_declElements pOutfield_decl;
	private final Ecl_integerElements pEcl_integer;
	private final Ecl_unsignedElements pEcl_unsigned;
	private final Ecl_stringElements pEcl_string;
	private final Ecl_qstringElements pEcl_qstring;
	private final Ecl_varstringElements pEcl_varstring;
	private final Ecl_unicodeElements pEcl_unicode;
	private final Ecl_varunicodeElements pEcl_varunicode;
	private final Ecl_dataElements pEcl_data;
	private final Ecl_realElements pEcl_real;
	private final Eclfield_typeElements pEclfield_type;
	private final Ecloutput_declElements pEcloutput_decl;
	private final Output_optionElements pOutput_option;
	private final Output_optionsElements pOutput_options;
	private final Out_typeElements pOut_type;
	private final Output_valueElements pOutput_value;
	private final OutputbaseElements pOutputbase;
	private final Generate_sectionElements pGenerate_section;
	private final Generate_bodyElements pGenerate_body;
	private final Visual_sectionElements pVisual_section;
	private final VisualizationElements pVisualization;
	private final Vis_basisElements pVis_basis;
	private final Vis_basis_qualifiersElements pVis_basis_qualifiers;
	private final FunctionElements pFunction;
	private final Visual_section_optionsElements pVisual_section_options;
	private final Visual_section_optionElements pVisual_section_option;
	private final Visual_optionsElements pVisual_options;
	private final Visual_optionElements pVisual_option;
	private final Visual_multivalElements pVisual_multival;
	private final Custom_sectionElements pCustom_section;
	private final Custom_valueElements pCustom_value;
	private final Resource_optionElements pResource_option;
	private final Resource_optionsElements pResource_options;
	private final Resource_valueElements pResource_value;
	private final Resource_sectionElements pResource_section;
	private final TerminalRule tWS;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING;
	private final TerminalRule tECL_CODE;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HIPIEGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProgram = new ProgramElements();
		this.pBase_prop = new Base_propElements();
		this.pCategory_type = new Category_typeElements();
		this.pCategory_type_list = new Category_type_listElements();
		this.pValue = new ValueElements();
		this.pValue_list = new Value_listElements();
		this.pID_list = new ID_listElements();
		this.pAssign = new AssignElements();
		this.pAssign_list = new Assign_listElements();
		this.pComposition_header = new Composition_headerElements();
		this.pContract_instance = new Contract_instanceElements();
		this.pField_decl = new Field_declElements();
		this.pEnum_decl = new Enum_declElements();
		this.pInput_section = new Input_sectionElements();
		this.pBool = new BoolElements();
		this.pInt_var = new Int_varElements();
		this.pString_var = new String_varElements();
		this.pRecord = new RecordElements();
		this.pDataset = new DatasetElements();
		this.pGroup = new GroupElements();
		this.pDatatype = new DatatypeElements();
		this.pInput_value = new Input_valueElements();
		this.pInput_options = new Input_optionsElements();
		this.pInput_option = new Input_optionElements();
		this.pFormfield_option = new Formfield_optionElements();
		this.pInputtype_option = new Inputtype_optionElements();
		this.pInputtype_options = new Inputtype_optionsElements();
		this.pOutput_section = new Output_sectionElements();
		this.pOutfield_decl = new Outfield_declElements();
		this.pEcl_integer = new Ecl_integerElements();
		this.pEcl_unsigned = new Ecl_unsignedElements();
		this.pEcl_string = new Ecl_stringElements();
		this.pEcl_qstring = new Ecl_qstringElements();
		this.pEcl_varstring = new Ecl_varstringElements();
		this.pEcl_unicode = new Ecl_unicodeElements();
		this.pEcl_varunicode = new Ecl_varunicodeElements();
		this.pEcl_data = new Ecl_dataElements();
		this.pEcl_real = new Ecl_realElements();
		this.pEclfield_type = new Eclfield_typeElements();
		this.pEcloutput_decl = new Ecloutput_declElements();
		this.pOutput_option = new Output_optionElements();
		this.pOutput_options = new Output_optionsElements();
		this.pOut_type = new Out_typeElements();
		this.pOutput_value = new Output_valueElements();
		this.pOutputbase = new OutputbaseElements();
		this.pGenerate_section = new Generate_sectionElements();
		this.pGenerate_body = new Generate_bodyElements();
		this.pVisual_section = new Visual_sectionElements();
		this.pVisualization = new VisualizationElements();
		this.pVis_basis = new Vis_basisElements();
		this.pVis_basis_qualifiers = new Vis_basis_qualifiersElements();
		this.pFunction = new FunctionElements();
		this.pVisual_section_options = new Visual_section_optionsElements();
		this.pVisual_section_option = new Visual_section_optionElements();
		this.pVisual_options = new Visual_optionsElements();
		this.pVisual_option = new Visual_optionElements();
		this.pVisual_multival = new Visual_multivalElements();
		this.pCustom_section = new Custom_sectionElements();
		this.pCustom_value = new Custom_valueElements();
		this.pResource_option = new Resource_optionElements();
		this.pResource_options = new Resource_optionsElements();
		this.pResource_value = new Resource_valueElements();
		this.pResource_section = new Resource_sectionElements();
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING");
		this.tECL_CODE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ECL_CODE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.hipie.HIPIE".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//program:
	//	Composition_Header+=composition_header? Base_Props+=base_prop+ Contract_Instances+=contract_instance*
	//	Input_Section+=input_section? Output_Section+=output_section? Visual_Section+=visual_section*
	//	Generate_Section+=generate_section? Custom_Section+=custom_section? Resource_Section+=resource_section?;
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}

	//base_prop:
	//	(name="NAME" | name="DESCRIPTION" | name="AUTHOR" | name="LICENSE" | name="COPYRIGHT" | name="VERSION" | name="LABEL"
	//	| name="ID") vals+=value_list ";" | name="CATEGORY" cats+=category_type_list ";";
	public Base_propElements getBase_propAccess() {
		return pBase_prop;
	}
	
	public ParserRule getBase_propRule() {
		return getBase_propAccess().getRule();
	}

	//category_type:
	//	"CLEAN" | "INPUT" | "APPEND" | "LINK" | "ANALYSIS" | "CUSTOM" | "VISUALIZE" | "OUTPUT";
	public Category_typeElements getCategory_typeAccess() {
		return pCategory_type;
	}
	
	public ParserRule getCategory_typeRule() {
		return getCategory_typeAccess().getRule();
	}

	//category_type_list:
	//	name=category_type ("," category_type)*;
	public Category_type_listElements getCategory_type_listAccess() {
		return pCategory_type_list;
	}
	
	public ParserRule getCategory_type_listRule() {
		return getCategory_type_listAccess().getRule();
	}

	//value:
	//	name=ID | type=INT | name=STRING;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}

	//value_list:
	//	value ("," vals+=value)*;
	public Value_listElements getValue_listAccess() {
		return pValue_list;
	}
	
	public ParserRule getValue_listRule() {
		return getValue_listAccess().getRule();
	}

	//ID_list:
	//	ID ("," ID)*;
	public ID_listElements getID_listAccess() {
		return pID_list;
	}
	
	public ParserRule getID_listRule() {
		return getID_listAccess().getRule();
	}

	//assign:
	//	value "=" vals+=value_list;
	public AssignElements getAssignAccess() {
		return pAssign;
	}
	
	public ParserRule getAssignRule() {
		return getAssignAccess().getRule();
	}

	//assign_list:
	//	assign ("," assign_internal+=assign)*;
	public Assign_listElements getAssign_listAccess() {
		return pAssign_list;
	}
	
	public ParserRule getAssign_listRule() {
		return getAssign_listAccess().getRule();
	}

	//composition_header:
	//	name="HEADER" assigns+=assign* "END";
	public Composition_headerElements getComposition_headerAccess() {
		return pComposition_header;
	}
	
	public ParserRule getComposition_headerRule() {
		return getComposition_headerAccess().getRule();
	}

	//contract_instance:
	//	name="INSTANCE" (ID ":")? vals+=value "(" vars+=[value] ")" assigns+=assign* "END";
	public Contract_instanceElements getContract_instanceAccess() {
		return pContract_instance;
	}
	
	public ParserRule getContract_instanceRule() {
		return getContract_instanceAccess().getRule();
	}

	//field_decl:
	//	"FIELD" name=ID input_internal+=input_options? ";";
	public Field_declElements getField_declAccess() {
		return pField_decl;
	}
	
	public ParserRule getField_declRule() {
		return getField_declAccess().getRule();
	}

	//enum_decl:
	//	name="ENUM" "(" (vals+=value_list | assigns+=assign_list) ")";
	public Enum_declElements getEnum_declAccess() {
		return pEnum_decl;
	}
	
	public ParserRule getEnum_declRule() {
		return getEnum_declAccess().getRule();
	}

	//input_section:
	//	name="INPUTS" inputs+=input_value+ "END";
	public Input_sectionElements getInput_sectionAccess() {
		return pInput_section;
	}
	
	public ParserRule getInput_sectionRule() {
		return getInput_sectionAccess().getRule();
	}

	//bool:
	//	"BOOL" name=ID;
	public BoolElements getBoolAccess() {
		return pBool;
	}
	
	public ParserRule getBoolRule() {
		return getBoolAccess().getRule();
	}

	//int_var:
	//	"INT" name=ID;
	public Int_varElements getInt_varAccess() {
		return pInt_var;
	}
	
	public ParserRule getInt_varRule() {
		return getInt_varAccess().getRule();
	}

	//string_var:
	//	"STRING" name=ID;
	public String_varElements getString_varAccess() {
		return pString_var;
	}
	
	public ParserRule getString_varRule() {
		return getString_varAccess().getRule();
	}

	//record:
	//	"RECORD" name=ID;
	public RecordElements getRecordAccess() {
		return pRecord;
	}
	
	public ParserRule getRecordRule() {
		return getRecordAccess().getRule();
	}

	//dataset:
	//	"DATASET" name=ID;
	public DatasetElements getDatasetAccess() {
		return pDataset;
	}
	
	public ParserRule getDatasetRule() {
		return getDatasetAccess().getRule();
	}

	//group:
	//	"GROUP" name=ID;
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}

	//datatype:
	//	bool | int_var | string_var | record | dataset;
	public DatatypeElements getDatatypeAccess() {
		return pDatatype;
	}
	
	public ParserRule getDatatypeRule() {
		return getDatatypeAccess().getRule();
	}

	//input_value:
	//	(bool | int_var | enum_decl | string_var | record | dataset) input_ops+=input_options? ";" | dataset
	//	input_ops+=input_options? fields+=field_decl* "END" | group input_internal+=input_options? values+=input_value* "END";
	public Input_valueElements getInput_valueAccess() {
		return pInput_value;
	}
	
	public ParserRule getInput_valueRule() {
		return getInput_valueAccess().getRule();
	}

	//input_options:
	//	":" input_option ("," input_internal+=input_option)*;
	public Input_optionsElements getInput_optionsAccess() {
		return pInput_options;
	}
	
	public ParserRule getInput_optionsRule() {
		return getInput_optionsAccess().getRule();
	}

	//input_option:
	//	(name="OPTIONAL" | name="DEFINED" | name="DISABLED" | name="MAPBYTYPE" | name="MAPBYNAME" | name="MANY") |
	//	name="FORMFIELD" "(" formfield_option ")" | name="ENABLE" "(" assigns_internal+=assign_list ")" | name="TYPE" "("
	//	inputtype_options ")" | (name="RANGE" | name="DEFAULT" | name="MAXLENGTH" | name="DISABLED" | name="DESCRIPTION" |
	//	name="NULL" | name="FIELDLENGTH" | name="ROWS" | name="COLS" | name="_HTML_STYLECLASS" | name="LABEL") "("
	//	vals+=value_list ")";
	public Input_optionElements getInput_optionAccess() {
		return pInput_option;
	}
	
	public ParserRule getInput_optionRule() {
		return getInput_optionAccess().getRule();
	}

	//formfield_option:
	//	"CHECKBOX" | "RADIO" | "SELECT" | "MULTIPLESELECT" | "TEXTAREA" | "HIDDEN" | "TEXT";
	public Formfield_optionElements getFormfield_optionAccess() {
		return pFormfield_option;
	}
	
	public ParserRule getFormfield_optionRule() {
		return getFormfield_optionAccess().getRule();
	}

	//inputtype_option:
	//	"STRING" | "UNICODE" | "UNISTR" | "INTEGER" | "DECIMAL" | "NUMERIC" | "REAL";
	public Inputtype_optionElements getInputtype_optionAccess() {
		return pInputtype_option;
	}
	
	public ParserRule getInputtype_optionRule() {
		return getInputtype_optionAccess().getRule();
	}

	//inputtype_options:
	//	inputtype_option ("," inputtype_option)*;
	public Inputtype_optionsElements getInputtype_optionsAccess() {
		return pInputtype_options;
	}
	
	public ParserRule getInputtype_optionsRule() {
		return getInputtype_optionsAccess().getRule();
	}

	//output_section:
	//	name="OUTPUTS" outputs+=output_value+ "END";
	public Output_sectionElements getOutput_sectionAccess() {
		return pOutput_section;
	}
	
	public ParserRule getOutput_sectionRule() {
		return getOutput_sectionAccess().getRule();
	}

	//outfield_decl:
	//	int_var | bool | string_var | fields+=field_decl;
	public Outfield_declElements getOutfield_declAccess() {
		return pOutfield_decl;
	}
	
	public ParserRule getOutfield_declRule() {
		return getOutfield_declAccess().getRule();
	}

	//ecl_integer:
	//	"INTEGER" INT? name=ID;
	public Ecl_integerElements getEcl_integerAccess() {
		return pEcl_integer;
	}
	
	public ParserRule getEcl_integerRule() {
		return getEcl_integerAccess().getRule();
	}

	//ecl_unsigned:
	//	"UNSIGNED" INT? name=ID;
	public Ecl_unsignedElements getEcl_unsignedAccess() {
		return pEcl_unsigned;
	}
	
	public ParserRule getEcl_unsignedRule() {
		return getEcl_unsignedAccess().getRule();
	}

	//ecl_string:
	//	"STRING" INT? name=ID;
	public Ecl_stringElements getEcl_stringAccess() {
		return pEcl_string;
	}
	
	public ParserRule getEcl_stringRule() {
		return getEcl_stringAccess().getRule();
	}

	//ecl_qstring:
	//	"QSTRING" INT? name=ID;
	public Ecl_qstringElements getEcl_qstringAccess() {
		return pEcl_qstring;
	}
	
	public ParserRule getEcl_qstringRule() {
		return getEcl_qstringAccess().getRule();
	}

	//ecl_varstring:
	//	"VARSTRING" INT? name=ID;
	public Ecl_varstringElements getEcl_varstringAccess() {
		return pEcl_varstring;
	}
	
	public ParserRule getEcl_varstringRule() {
		return getEcl_varstringAccess().getRule();
	}

	//ecl_unicode:
	//	"UNICODE" INT? name=ID;
	public Ecl_unicodeElements getEcl_unicodeAccess() {
		return pEcl_unicode;
	}
	
	public ParserRule getEcl_unicodeRule() {
		return getEcl_unicodeAccess().getRule();
	}

	//ecl_varunicode:
	//	"VARUNICODE" INT? name=ID;
	public Ecl_varunicodeElements getEcl_varunicodeAccess() {
		return pEcl_varunicode;
	}
	
	public ParserRule getEcl_varunicodeRule() {
		return getEcl_varunicodeAccess().getRule();
	}

	//ecl_data:
	//	"DATA" name=ID;
	public Ecl_dataElements getEcl_dataAccess() {
		return pEcl_data;
	}
	
	public ParserRule getEcl_dataRule() {
		return getEcl_dataAccess().getRule();
	}

	//ecl_real:
	//	"REAL" name=ID;
	public Ecl_realElements getEcl_realAccess() {
		return pEcl_real;
	}
	
	public ParserRule getEcl_realRule() {
		return getEcl_realAccess().getRule();
	}

	//eclfield_type:
	//	ecl_integer | ecl_qstring | ecl_string | ecl_real | ecl_unicode | ecl_data | ecl_varstring | ecl_varunicode |
	//	ecl_unsigned;
	public Eclfield_typeElements getEclfield_typeAccess() {
		return pEclfield_type;
	}
	
	public ParserRule getEclfield_typeRule() {
		return getEclfield_typeAccess().getRule();
	}

	//ecloutput_decl:
	//	eclfield_type options+=output_options? ";";
	public Ecloutput_declElements getEcloutput_declAccess() {
		return pEcloutput_decl;
	}
	
	public ParserRule getEcloutput_declRule() {
		return getEcloutput_declAccess().getRule();
	}

	//output_option:
	//	(name="SIDE" | name="LARGE" | name="SMALL" | name="FEW" | name="WUID") | name="FROM" "(" vars+=[datatype] ")" |
	//	name="DESCRIPTION" "(" vals+=value ")";
	public Output_optionElements getOutput_optionAccess() {
		return pOutput_option;
	}
	
	public ParserRule getOutput_optionRule() {
		return getOutput_optionAccess().getRule();
	}

	//output_options:
	//	":" output_option ("," output_internal+=output_option)*;
	public Output_optionsElements getOutput_optionsAccess() {
		return pOutput_options;
	}
	
	public ParserRule getOutput_optionsRule() {
		return getOutput_optionsAccess().getRule();
	}

	//out_type:
	//	("BOOL" | "INT" | "STRING" | "ACTION")? value;
	public Out_typeElements getOut_typeAccess() {
		return pOut_type;
	}
	
	public ParserRule getOut_typeRule() {
		return getOut_typeAccess().getRule();
	}

	//output_value:
	//	out_type ops+=output_options? ";" | dataset out_base+=outputbase? ops+=output_options? ecl_vars+=ecloutput_decl* "END"
	//	| dataset op_base+=outputbase? ops+=output_options? ";";
	public Output_valueElements getOutput_valueAccess() {
		return pOutput_value;
	}
	
	public ParserRule getOutput_valueRule() {
		return getOutput_valueAccess().getRule();
	}

	//outputbase:
	//	"(" actions=[dataset] ")";
	public OutputbaseElements getOutputbaseAccess() {
		return pOutputbase;
	}
	
	public ParserRule getOutputbaseRule() {
		return getOutputbaseAccess().getRule();
	}

	//generate_section:
	//	name="GENERATES" body+=generate_body "ENDGENERATES";
	public Generate_sectionElements getGenerate_sectionAccess() {
		return pGenerate_section;
	}
	
	public ParserRule getGenerate_sectionRule() {
		return getGenerate_sectionAccess().getRule();
	}

	//generate_body:
	//	name="INLINE" (ID | INT | WS | STRING | ECL_CODE | ";" | "." | "(" | ")" | "," | ":" | "=" | "{" | "}" | "-")* |
	//	name="SALT" "(" ID ")" ":" ("SCOREDSEARCH" | "PROFILE");
	public Generate_bodyElements getGenerate_bodyAccess() {
		return pGenerate_body;
	}
	
	public ParserRule getGenerate_bodyRule() {
		return getGenerate_bodyAccess().getRule();
	}

	//visual_section:
	//	name="VISUALIZE" ID vis_ops+=visual_section_options? vis_elements+=visualization+ "END";
	public Visual_sectionElements getVisual_sectionAccess() {
		return pVisual_section;
	}
	
	public ParserRule getVisual_sectionRule() {
		return getVisual_sectionAccess().getRule();
	}

	//visualization:
	//	("CHORO" | "LINE" | "TIMELINE" | "PIE" | "BAR" | "TABLE") name=ID "(" inputs+=vis_basis ")" vis_ops+=visual_options?
	//	";" | "SLIDER" name=ID vis_ops+=visual_options? ";";
	public VisualizationElements getVisualizationAccess() {
		return pVisualization;
	}
	
	public ParserRule getVisualizationRule() {
		return getVisualizationAccess().getRule();
	}

	//vis_basis:
	//	vars+=[dataset] quals+=vis_basis_qualifiers?;
	public Vis_basisElements getVis_basisAccess() {
		return pVis_basis;
	}
	
	public ParserRule getVis_basisRule() {
		return getVis_basisAccess().getRule();
	}

	//vis_basis_qualifiers:
	//	"{" function ("," funcs+=function)* "}";
	public Vis_basis_qualifiersElements getVis_basis_qualifiersAccess() {
		return pVis_basis_qualifiers;
	}
	
	public ParserRule getVis_basis_qualifiersRule() {
		return getVis_basis_qualifiersAccess().getRule();
	}

	//function:
	//	value | "SUM" "(" name=ID ")" | "SCALE" "(" name=ID "," INT ")";
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}

	//visual_section_options:
	//	":" visual_section_option ("," vis_ops+=visual_section_option)*;
	public Visual_section_optionsElements getVisual_section_optionsAccess() {
		return pVisual_section_options;
	}
	
	public ParserRule getVisual_section_optionsRule() {
		return getVisual_section_optionsAccess().getRule();
	}

	//visual_section_option:
	//	name="LABEL" "(" vals+=value ")";
	public Visual_section_optionElements getVisual_section_optionAccess() {
		return pVisual_section_option;
	}
	
	public ParserRule getVisual_section_optionRule() {
		return getVisual_section_optionAccess().getRule();
	}

	//visual_options:
	//	":" visual_option ("," vis_ops+=visual_option)*;
	public Visual_optionsElements getVisual_optionsAccess() {
		return pVisual_options;
	}
	
	public ParserRule getVisual_optionsRule() {
		return getVisual_optionsAccess().getRule();
	}

	//visual_option:
	//	(name="TITLE" | name="DATE" | name="DESCRIPTION" | name="PICTURE" | name="STATE" | name="COUNTY" | name="WEIGHT" |
	//	name="SIZE") "(" funcs+=function ")" | visual_multival "(" funcs+=function ("," funcs+=function)* ")" | name="SELECTS"
	//	"(" ID "->" ID ")";
	public Visual_optionElements getVisual_optionAccess() {
		return pVisual_option;
	}
	
	public ParserRule getVisual_optionRule() {
		return getVisual_optionAccess().getRule();
	}

	//visual_multival:
	//	name="X" | name="Y" | name="COLOR" | name="RANGE" | name="FILTER" | name="LABEL" | name="VALUE";
	public Visual_multivalElements getVisual_multivalAccess() {
		return pVisual_multival;
	}
	
	public ParserRule getVisual_multivalRule() {
		return getVisual_multivalAccess().getRule();
	}

	//custom_section:
	//	name="CUSTOM" cust_vals+=custom_value* "END";
	public Custom_sectionElements getCustom_sectionAccess() {
		return pCustom_section;
	}
	
	public ParserRule getCustom_sectionRule() {
		return getCustom_sectionAccess().getRule();
	}

	//custom_value:
	//	ID value ";";
	public Custom_valueElements getCustom_valueAccess() {
		return pCustom_value;
	}
	
	public ParserRule getCustom_valueRule() {
		return getCustom_valueAccess().getRule();
	}

	//resource_option:
	//	(name="DESCRIPTION" | name="FILE" | name="LABEL" | name="_HTML_STYLECLASS") "(" vals+=value ")";
	public Resource_optionElements getResource_optionAccess() {
		return pResource_option;
	}
	
	public ParserRule getResource_optionRule() {
		return getResource_optionAccess().getRule();
	}

	//resource_options:
	//	resource_option ("," res_ops+=resource_option)*;
	public Resource_optionsElements getResource_optionsAccess() {
		return pResource_options;
	}
	
	public ParserRule getResource_optionsRule() {
		return getResource_optionsAccess().getRule();
	}

	//resource_value:
	//	value ":" res_ops+=resource_options? ";";
	public Resource_valueElements getResource_valueAccess() {
		return pResource_value;
	}
	
	public ParserRule getResource_valueRule() {
		return getResource_valueAccess().getRule();
	}

	//resource_section:
	//	name="RESOURCES" res_vals+=resource_value+ "END";
	public Resource_sectionElements getResource_sectionAccess() {
		return pResource_section;
	}
	
	public ParserRule getResource_sectionRule() {
		return getResource_sectionAccess().getRule();
	}

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return tWS;
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return tINT;
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//terminal ECL_CODE:
	//	"%" !"%"* "%";
	public TerminalRule getECL_CODERule() {
		return tECL_CODE;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
