/*
 * generated by Xtext
 */
grammar InternalHIPIE;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.hipie.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.hipie.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.hipie.services.HIPIEGrammarAccess;

}

@parser::members {

 	private HIPIEGrammarAccess grammarAccess;
 	
    public InternalHIPIEParser(TokenStream input, HIPIEGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Program";	
   	}
   	
   	@Override
   	protected HIPIEGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getComposition_headerCompositionHeaderParserRuleCall_0_0()); 
	    }
		lv_composition_header_0_0=ruleCompositionHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"composition_header",
        		lv_composition_header_0_0, 
        		"CompositionHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getBase_propsBasePropParserRuleCall_1_0()); 
	    }
		lv_base_props_1_0=ruleBaseProp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"base_props",
        		lv_base_props_1_0, 
        		"BaseProp");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getContract_instancesContractInstanceParserRuleCall_2_0()); 
	    }
		lv_contract_instances_2_0=ruleContractInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"contract_instances",
        		lv_contract_instances_2_0, 
        		"ContractInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getInput_sectionInputSectionParserRuleCall_3_0()); 
	    }
		lv_input_section_3_0=ruleInputSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"input_section",
        		lv_input_section_3_0, 
        		"InputSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getOutput_sectionOutputSectionParserRuleCall_4_0()); 
	    }
		lv_output_section_4_0=ruleOutputSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"output_section",
        		lv_output_section_4_0, 
        		"OutputSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getVisual_sectionVisualSectionParserRuleCall_5_0()); 
	    }
		lv_visual_section_5_0=ruleVisualSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"visual_section",
        		lv_visual_section_5_0, 
        		"VisualSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getGenerate_sectionGenerateSectionParserRuleCall_6_0()); 
	    }
		lv_generate_section_6_0=ruleGenerateSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"generate_section",
        		lv_generate_section_6_0, 
        		"GenerateSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getCustom_sectionCustomSectionParserRuleCall_7_0()); 
	    }
		lv_custom_section_7_0=ruleCustomSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"custom_section",
        		lv_custom_section_7_0, 
        		"CustomSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getSesource_sectionResourceSectionParserRuleCall_8_0()); 
	    }
		lv_sesource_section_8_0=ruleResourceSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"sesource_section",
        		lv_sesource_section_8_0, 
        		"ResourceSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBaseProp
entryRuleBaseProp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasePropRule()); }
	 iv_ruleBaseProp=ruleBaseProp 
	 { $current=$iv_ruleBaseProp.current; } 
	 EOF 
;

// Rule BaseProp
ruleBaseProp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'NAME' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getBasePropAccess().getNameNAMEKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "NAME");
	    }

)
)
    |(
(
		lv_name_1_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getBasePropAccess().getNameDESCRIPTIONKeyword_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_name_2_0=	'AUTHOR' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getBasePropAccess().getNameAUTHORKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "AUTHOR");
	    }

)
)
    |(
(
		lv_name_3_0=	'LICENSE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getBasePropAccess().getNameLICENSEKeyword_0_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "LICENSE");
	    }

)
)
    |(
(
		lv_name_4_0=	'COPYRIGHT' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getBasePropAccess().getNameCOPYRIGHTKeyword_0_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "COPYRIGHT");
	    }

)
)
    |(
(
		lv_name_5_0=	'VERSION' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getBasePropAccess().getNameVERSIONKeyword_0_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "VERSION");
	    }

)
)
    |(
(
		lv_name_6_0=	'LABEL' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getBasePropAccess().getNameLABELKeyword_0_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "LABEL");
	    }

)
)
    |(
(
		lv_name_7_0=	'ID' 
    {
        newLeafNode(lv_name_7_0, grammarAccess.getBasePropAccess().getNameIDKeyword_0_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_7_0, "ID");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getBasePropAccess().getVal_listValueListParserRuleCall_0_1_0()); 
	    }
		lv_val_list_8_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasePropRule());
	        }
       		set(
       			$current, 
       			"val_list",
        		lv_val_list_8_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBasePropAccess().getSemicolonKeyword_0_2());
    }
)
    |((
(
		lv_name_10_0=	'CATEGORY' 
    {
        newLeafNode(lv_name_10_0, grammarAccess.getBasePropAccess().getNameCATEGORYKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_10_0, "CATEGORY");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasePropAccess().getCat_listCategoryTypeListParserRuleCall_1_1_0()); 
	    }
		lv_cat_list_11_0=ruleCategoryTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasePropRule());
	        }
       		set(
       			$current, 
       			"cat_list",
        		lv_cat_list_11_0, 
        		"CategoryTypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBasePropAccess().getSemicolonKeyword_1_2());
    }
))
;





// Entry rule entryRuleCategoryType
entryRuleCategoryType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryTypeRule()); } 
	 iv_ruleCategoryType=ruleCategoryType 
	 { $current=$iv_ruleCategoryType.current.getText(); }  
	 EOF 
;

// Rule CategoryType
ruleCategoryType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='CLEAN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getCLEANKeyword_0()); 
    }

    |
	kw='INPUT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getINPUTKeyword_1()); 
    }

    |
	kw='APPEND' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getAPPENDKeyword_2()); 
    }

    |
	kw='LINK' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getLINKKeyword_3()); 
    }

    |
	kw='ANALYSIS' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getANALYSISKeyword_4()); 
    }

    |
	kw='CUSTOM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getCUSTOMKeyword_5()); 
    }

    |
	kw='VISUALIZE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getVISUALIZEKeyword_6()); 
    }

    |
	kw='OUTPUT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCategoryTypeAccess().getOUTPUTKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleCategoryTypeList
entryRuleCategoryTypeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryTypeListRule()); }
	 iv_ruleCategoryTypeList=ruleCategoryTypeList 
	 { $current=$iv_ruleCategoryTypeList.current; } 
	 EOF 
;

// Rule CategoryTypeList
ruleCategoryTypeList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryTypeListAccess().getCatsCategoryTypeParserRuleCall_0_0()); 
	    }
		lv_cats_0_0=ruleCategoryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryTypeListRule());
	        }
       		add(
       			$current, 
       			"cats",
        		lv_cats_0_0, 
        		"CategoryType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCategoryTypeListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryTypeListAccess().getCatsCategoryTypeParserRuleCall_1_1_0()); 
	    }
		lv_cats_2_0=ruleCategoryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryTypeListRule());
	        }
       		add(
       			$current, 
       			"cats",
        		lv_cats_2_0, 
        		"CategoryType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_int_val_1_0=RULE_INT
		{
			newLeafNode(lv_int_val_1_0, grammarAccess.getValueAccess().getInt_valINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int_val",
        		lv_int_val_1_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_str_val_2_0=RULE_STRING
		{
			newLeafNode(lv_str_val_2_0, grammarAccess.getValueAccess().getStr_valSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str_val",
        		lv_str_val_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleValueList
entryRuleValueList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueListRule()); }
	 iv_ruleValueList=ruleValueList 
	 { $current=$iv_ruleValueList.current; } 
	 EOF 
;

// Rule ValueList
ruleValueList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValueListAccess().getValsValueParserRuleCall_0_0()); 
	    }
		lv_vals_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueListRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueListAccess().getValsValueParserRuleCall_1_1_0()); 
	    }
		lv_vals_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueListRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;







// Entry rule entryRuleAssign
entryRuleAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignRule()); }
	 iv_ruleAssign=ruleAssign 
	 { $current=$iv_ruleAssign.current; } 
	 EOF 
;

// Rule Assign
ruleAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAssignAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignAccess().getValsValueListParserRuleCall_2_0()); 
	    }
		lv_vals_2_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_2_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAssignList
entryRuleAssignList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignListRule()); }
	 iv_ruleAssignList=ruleAssignList 
	 { $current=$iv_ruleAssignList.current; } 
	 EOF 
;

// Rule AssignList
ruleAssignList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignListAccess().getAssignsAssignParserRuleCall_0_0()); 
	    }
		lv_assigns_0_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignListRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_0_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignListAccess().getAssignsAssignParserRuleCall_1_1_0()); 
	    }
		lv_assigns_2_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignListRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_2_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCompositionHeader
entryRuleCompositionHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositionHeaderRule()); }
	 iv_ruleCompositionHeader=ruleCompositionHeader 
	 { $current=$iv_ruleCompositionHeader.current; } 
	 EOF 
;

// Rule CompositionHeader
ruleCompositionHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'HEADER' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCompositionHeaderAccess().getNameHEADERKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositionHeaderRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "HEADER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositionHeaderAccess().getAssignsAssignParserRuleCall_1_0()); 
	    }
		lv_assigns_1_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositionHeaderRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_1_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompositionHeaderAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleContractInstance
entryRuleContractInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContractInstanceRule()); }
	 iv_ruleContractInstance=ruleContractInstance 
	 { $current=$iv_ruleContractInstance.current; } 
	 EOF 
;

// Rule ContractInstance
ruleContractInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sec_name_0_0=	'INSTANCE' 
    {
        newLeafNode(lv_sec_name_0_0, grammarAccess.getContractInstanceAccess().getSec_nameINSTANCEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContractInstanceRule());
	        }
       		setWithLastConsumed($current, "sec_name", lv_sec_name_0_0, "INSTANCE");
	    }

)
)(this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getContractInstanceAccess().getIDTerminalRuleCall_1_0()); 
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContractInstanceAccess().getColonKeyword_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getContractInstanceAccess().getValsValueParserRuleCall_2_0()); 
	    }
		lv_vals_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContractInstanceRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContractInstanceAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContractInstanceRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getContractInstanceAccess().getVarsValueCrossReference_4_0()); 
	}

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getContractInstanceAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContractInstanceAccess().getAssignsAssignParserRuleCall_6_0()); 
	    }
		lv_assigns_7_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContractInstanceRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_7_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_8='END' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getContractInstanceAccess().getENDKeyword_7());
    }
))
;





// Entry rule entryRuleFieldDecl
entryRuleFieldDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldDeclRule()); }
	 iv_ruleFieldDecl=ruleFieldDecl 
	 { $current=$iv_ruleFieldDecl.current; } 
	 EOF 
;

// Rule FieldDecl
ruleFieldDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FIELD' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldDeclAccess().getFIELDKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFieldDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldDeclAccess().getInput_opsInputOptionsParserRuleCall_2_0()); 
	    }
		lv_input_ops_2_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldDeclRule());
	        }
       		set(
       			$current, 
       			"input_ops",
        		lv_input_ops_2_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldDeclAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleEnumDecl
entryRuleEnumDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumDeclRule()); }
	 iv_ruleEnumDecl=ruleEnumDecl 
	 { $current=$iv_ruleEnumDecl.current; } 
	 EOF 
;

// Rule EnumDecl
ruleEnumDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_enum_dec_0_0=	'ENUM' 
    {
        newLeafNode(lv_enum_dec_0_0, grammarAccess.getEnumDeclAccess().getEnum_decENUMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumDeclRule());
	        }
       		setWithLastConsumed($current, "enum_dec", lv_enum_dec_0_0, "ENUM");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumDeclAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclAccess().getValsValueListParserRuleCall_2_0_0()); 
	    }
		lv_vals_2_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_2_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclAccess().getAssignsAssignListParserRuleCall_2_1_0()); 
	    }
		lv_assigns_3_0=ruleAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_3_0, 
        		"AssignList");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumDeclAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleInputSection
entryRuleInputSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputSectionRule()); }
	 iv_ruleInputSection=ruleInputSection 
	 { $current=$iv_ruleInputSection.current; } 
	 EOF 
;

// Rule InputSection
ruleInputSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'INPUTS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getInputSectionAccess().getNameINPUTSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "INPUTS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInputSectionAccess().getInputsInputValueParserRuleCall_1_0()); 
	    }
		lv_inputs_1_0=ruleInputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputSectionRule());
	        }
       		add(
       			$current, 
       			"inputs",
        		lv_inputs_1_0, 
        		"InputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputSectionAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleBool
entryRuleBool returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolRule()); }
	 iv_ruleBool=ruleBool 
	 { $current=$iv_ruleBool.current; } 
	 EOF 
;

// Rule Bool
ruleBool returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BOOL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolAccess().getBOOLKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBoolAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleIntVar
entryRuleIntVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntVarRule()); }
	 iv_ruleIntVar=ruleIntVar 
	 { $current=$iv_ruleIntVar.current; } 
	 EOF 
;

// Rule IntVar
ruleIntVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='INT' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntVarAccess().getINTKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getIntVarAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleStringVar
entryRuleStringVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringVarRule()); }
	 iv_ruleStringVar=ruleStringVar 
	 { $current=$iv_ruleStringVar.current; } 
	 EOF 
;

// Rule StringVar
ruleStringVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='STRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringVarAccess().getSTRINGKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStringVarAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleRecord
entryRuleRecord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecordRule()); }
	 iv_ruleRecord=ruleRecord 
	 { $current=$iv_ruleRecord.current; } 
	 EOF 
;

// Rule Record
ruleRecord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RECORD' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordAccess().getRECORDKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRecordAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDataset
entryRuleDataset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatasetRule()); }
	 iv_ruleDataset=ruleDataset 
	 { $current=$iv_ruleDataset.current; } 
	 EOF 
;

// Rule Dataset
ruleDataset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DATASET' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDatasetAccess().getDATASETKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDatasetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatasetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	 iv_ruleGroup=ruleGroup 
	 { $current=$iv_ruleGroup.current; } 
	 EOF 
;

// Rule Group
ruleGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GROUP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGROUPKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;







// Entry rule entryRuleInputValue
entryRuleInputValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputValueRule()); }
	 iv_ruleInputValue=ruleInputValue 
	 { $current=$iv_ruleInputValue.current; } 
	 EOF 
;

// Rule InputValue
ruleInputValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getBoolParserRuleCall_0_0_0()); 
    }
    this_Bool_0=ruleBool
    { 
        $current = $this_Bool_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getIntVarParserRuleCall_0_0_1()); 
    }
    this_IntVar_1=ruleIntVar
    { 
        $current = $this_IntVar_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getStringVarParserRuleCall_0_0_2()); 
    }
    this_StringVar_2=ruleStringVar
    { 
        $current = $this_StringVar_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getRecordParserRuleCall_0_0_3()); 
    }
    this_Record_3=ruleRecord
    { 
        $current = $this_Record_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getDatasetParserRuleCall_0_0_4()); 
    }
    this_Dataset_4=ruleDataset
    { 
        $current = $this_Dataset_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getEnumDeclParserRuleCall_0_0_5()); 
    }
    this_EnumDecl_5=ruleEnumDecl
    { 
        $current = $this_EnumDecl_5.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_0_1_0()); 
	    }
		lv_input_op_list_6_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_6_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputValueAccess().getSemicolonKeyword_0_2());
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getDatasetParserRuleCall_1_0()); 
    }
    this_Dataset_8=ruleDataset
    { 
        $current = $this_Dataset_8.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_1_1_0()); 
	    }
		lv_input_op_list_9_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_9_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getFieldsFieldDeclParserRuleCall_1_2_0()); 
	    }
		lv_fields_10_0=ruleFieldDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_10_0, 
        		"FieldDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_11='END' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInputValueAccess().getENDKeyword_1_3());
    }
))
    |(
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getGroupParserRuleCall_2_0()); 
    }
    this_Group_12=ruleGroup
    { 
        $current = $this_Group_12.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_2_1_0()); 
	    }
		lv_input_op_list_13_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_13_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getValsInputValueParserRuleCall_2_2_0()); 
	    }
		lv_vals_14_0=ruleInputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_14_0, 
        		"InputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_15='END' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInputValueAccess().getENDKeyword_2_3());
    }
)))
;





// Entry rule entryRuleInputOptions
entryRuleInputOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputOptionsRule()); }
	 iv_ruleInputOptions=ruleInputOptions 
	 { $current=$iv_ruleInputOptions.current; } 
	 EOF 
;

// Rule InputOptions
ruleInputOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInputOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionsAccess().getInput_opsInputOptionParserRuleCall_1_0()); 
	    }
		lv_input_ops_1_0=ruleInputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionsRule());
	        }
       		add(
       			$current, 
       			"input_ops",
        		lv_input_ops_1_0, 
        		"InputOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionsAccess().getInput_opsInputOptionParserRuleCall_2_1_0()); 
	    }
		lv_input_ops_3_0=ruleInputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionsRule());
	        }
       		add(
       			$current, 
       			"input_ops",
        		lv_input_ops_3_0, 
        		"InputOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInputOption
entryRuleInputOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputOptionRule()); }
	 iv_ruleInputOption=ruleInputOption 
	 { $current=$iv_ruleInputOption.current; } 
	 EOF 
;

// Rule InputOption
ruleInputOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'OPTIONAL' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getInputOptionAccess().getNameOPTIONALKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "OPTIONAL");
	    }

)
)
    |(
(
		lv_name_1_0=	'DEFINED' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getInputOptionAccess().getNameDEFINEDKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "DEFINED");
	    }

)
)
    |(
(
		lv_name_2_0=	'DISABLED' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getInputOptionAccess().getNameDISABLEDKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "DISABLED");
	    }

)
)
    |(
(
		lv_name_3_0=	'MAPBYTYPE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getInputOptionAccess().getNameMAPBYTYPEKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "MAPBYTYPE");
	    }

)
)
    |(
(
		lv_name_4_0=	'MAPBYNAME' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getInputOptionAccess().getNameMAPBYNAMEKeyword_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "MAPBYNAME");
	    }

)
)
    |(
(
		lv_name_5_0=	'MANY' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getInputOptionAccess().getNameMANYKeyword_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "MANY");
	    }

)
))
    |((
(
		lv_name_6_0=	'FORMFIELD' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getInputOptionAccess().getNameFORMFIELDKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "FORMFIELD");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_1_1());
    }

    { 
        newCompositeNode(grammarAccess.getInputOptionAccess().getFormfieldOptionParserRuleCall_1_2()); 
    }
ruleFormfieldOption
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |((
(
		lv_name_10_0=	'ENABLE' 
    {
        newLeafNode(lv_name_10_0, grammarAccess.getInputOptionAccess().getNameENABLEKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_10_0, "ENABLE");
	    }

)
)	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionAccess().getAssigns_listAssignListParserRuleCall_2_2_0()); 
	    }
		lv_assigns_list_12_0=ruleAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionRule());
	        }
       		set(
       			$current, 
       			"assigns_list",
        		lv_assigns_list_12_0, 
        		"AssignList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_2_3());
    }
)
    |((
(
		lv_name_14_0=	'TYPE' 
    {
        newLeafNode(lv_name_14_0, grammarAccess.getInputOptionAccess().getNameTYPEKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_14_0, "TYPE");
	    }

)
)	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_3_1());
    }

    { 
        newCompositeNode(grammarAccess.getInputOptionAccess().getInputtypeOptionsParserRuleCall_3_2()); 
    }
ruleInputtypeOptions
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_3_3());
    }
)
    |(((
(
		lv_name_18_0=	'RANGE' 
    {
        newLeafNode(lv_name_18_0, grammarAccess.getInputOptionAccess().getNameRANGEKeyword_4_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_18_0, "RANGE");
	    }

)
)
    |(
(
		lv_name_19_0=	'DEFAULT' 
    {
        newLeafNode(lv_name_19_0, grammarAccess.getInputOptionAccess().getNameDEFAULTKeyword_4_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_19_0, "DEFAULT");
	    }

)
)
    |(
(
		lv_name_20_0=	'MAXLENGTH' 
    {
        newLeafNode(lv_name_20_0, grammarAccess.getInputOptionAccess().getNameMAXLENGTHKeyword_4_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_20_0, "MAXLENGTH");
	    }

)
)
    |(
(
		lv_name_21_0=	'DISABLED' 
    {
        newLeafNode(lv_name_21_0, grammarAccess.getInputOptionAccess().getNameDISABLEDKeyword_4_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_21_0, "DISABLED");
	    }

)
)
    |(
(
		lv_name_22_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_22_0, grammarAccess.getInputOptionAccess().getNameDESCRIPTIONKeyword_4_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_22_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_name_23_0=	'NULL' 
    {
        newLeafNode(lv_name_23_0, grammarAccess.getInputOptionAccess().getNameNULLKeyword_4_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_23_0, "NULL");
	    }

)
)
    |(
(
		lv_name_24_0=	'FIELDLENGTH' 
    {
        newLeafNode(lv_name_24_0, grammarAccess.getInputOptionAccess().getNameFIELDLENGTHKeyword_4_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_24_0, "FIELDLENGTH");
	    }

)
)
    |(
(
		lv_name_25_0=	'ROWS' 
    {
        newLeafNode(lv_name_25_0, grammarAccess.getInputOptionAccess().getNameROWSKeyword_4_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_25_0, "ROWS");
	    }

)
)
    |(
(
		lv_name_26_0=	'COLS' 
    {
        newLeafNode(lv_name_26_0, grammarAccess.getInputOptionAccess().getNameCOLSKeyword_4_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_26_0, "COLS");
	    }

)
)
    |(
(
		lv_name_27_0=	'_HTML_STYLECLASS' 
    {
        newLeafNode(lv_name_27_0, grammarAccess.getInputOptionAccess().getName_HTML_STYLECLASSKeyword_4_0_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_27_0, "_HTML_STYLECLASS");
	    }

)
)
    |(
(
		lv_name_28_0=	'LABEL' 
    {
        newLeafNode(lv_name_28_0, grammarAccess.getInputOptionAccess().getNameLABELKeyword_4_0_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_28_0, "LABEL");
	    }

)
))	otherlv_29='(' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionAccess().getValsValueListParserRuleCall_4_2_0()); 
	    }
		lv_vals_30_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_30_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_31=')' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_4_3());
    }
))
;





// Entry rule entryRuleFormfieldOption
entryRuleFormfieldOption returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormfieldOptionRule()); } 
	 iv_ruleFormfieldOption=ruleFormfieldOption 
	 { $current=$iv_ruleFormfieldOption.current.getText(); }  
	 EOF 
;

// Rule FormfieldOption
ruleFormfieldOption returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='CHECKBOX' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getCHECKBOXKeyword_0()); 
    }

    |
	kw='RADIO' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getRADIOKeyword_1()); 
    }

    |
	kw='SELECT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getSELECTKeyword_2()); 
    }

    |
	kw='MULTIPLESELECT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getMULTIPLESELECTKeyword_3()); 
    }

    |
	kw='TEXTAREA' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getTEXTAREAKeyword_4()); 
    }

    |
	kw='HIDDEN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getHIDDENKeyword_5()); 
    }

    |
	kw='TEXT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getTEXTKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleInputtypeOption
entryRuleInputtypeOption returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputtypeOptionRule()); } 
	 iv_ruleInputtypeOption=ruleInputtypeOption 
	 { $current=$iv_ruleInputtypeOption.current.getText(); }  
	 EOF 
;

// Rule InputtypeOption
ruleInputtypeOption returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='STRING' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getSTRINGKeyword_0()); 
    }

    |
	kw='UNICODE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getUNICODEKeyword_1()); 
    }

    |
	kw='UNISTR' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getUNISTRKeyword_2()); 
    }

    |
	kw='INTEGER' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getINTEGERKeyword_3()); 
    }

    |
	kw='DECIMAL' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getDECIMALKeyword_4()); 
    }

    |
	kw='NUMERIC' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getNUMERICKeyword_5()); 
    }

    |
	kw='REAL' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getREALKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleInputtypeOptions
entryRuleInputtypeOptions returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputtypeOptionsRule()); } 
	 iv_ruleInputtypeOptions=ruleInputtypeOptions 
	 { $current=$iv_ruleInputtypeOptions.current.getText(); }  
	 EOF 
;

// Rule InputtypeOptions
ruleInputtypeOptions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInputtypeOptionsAccess().getInputtypeOptionParserRuleCall_0()); 
    }
    this_InputtypeOption_0=ruleInputtypeOption    {
		$current.merge(this_InputtypeOption_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionsAccess().getCommaKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getInputtypeOptionsAccess().getInputtypeOptionParserRuleCall_1_1()); 
    }
    this_InputtypeOption_2=ruleInputtypeOption    {
		$current.merge(this_InputtypeOption_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleOutputSection
entryRuleOutputSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputSectionRule()); }
	 iv_ruleOutputSection=ruleOutputSection 
	 { $current=$iv_ruleOutputSection.current; } 
	 EOF 
;

// Rule OutputSection
ruleOutputSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'OUTPUTS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getOutputSectionAccess().getNameOUTPUTSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "OUTPUTS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputSectionAccess().getOutputsOutputValueParserRuleCall_1_0()); 
	    }
		lv_outputs_1_0=ruleOutputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputSectionRule());
	        }
       		add(
       			$current, 
       			"outputs",
        		lv_outputs_1_0, 
        		"OutputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputSectionAccess().getENDKeyword_2());
    }
))
;







// Entry rule entryRuleECLInteger
entryRuleECLInteger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLIntegerRule()); }
	 iv_ruleECLInteger=ruleECLInteger 
	 { $current=$iv_ruleECLInteger.current; } 
	 EOF 
;

// Rule ECLInteger
ruleECLInteger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='INTEGER' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLIntegerAccess().getINTEGERKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLIntegerAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLIntegerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLUnsigned
entryRuleECLUnsigned returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLUnsignedRule()); }
	 iv_ruleECLUnsigned=ruleECLUnsigned 
	 { $current=$iv_ruleECLUnsigned.current; } 
	 EOF 
;

// Rule ECLUnsigned
ruleECLUnsigned returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UNSIGNED' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLUnsignedAccess().getUNSIGNEDKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLUnsignedAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLUnsignedAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLUnsignedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLString
entryRuleECLString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLStringRule()); }
	 iv_ruleECLString=ruleECLString 
	 { $current=$iv_ruleECLString.current; } 
	 EOF 
;

// Rule ECLString
ruleECLString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='STRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLStringAccess().getSTRINGKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLStringAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLStringAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLQstring
entryRuleECLQstring returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLQstringRule()); }
	 iv_ruleECLQstring=ruleECLQstring 
	 { $current=$iv_ruleECLQstring.current; } 
	 EOF 
;

// Rule ECLQstring
ruleECLQstring returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='QSTRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLQstringAccess().getQSTRINGKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLQstringAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLQstringAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLQstringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLVarstring
entryRuleECLVarstring returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLVarstringRule()); }
	 iv_ruleECLVarstring=ruleECLVarstring 
	 { $current=$iv_ruleECLVarstring.current; } 
	 EOF 
;

// Rule ECLVarstring
ruleECLVarstring returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VARSTRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLVarstringAccess().getVARSTRINGKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLVarstringAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLVarstringAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLVarstringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLUnicode
entryRuleECLUnicode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLUnicodeRule()); }
	 iv_ruleECLUnicode=ruleECLUnicode 
	 { $current=$iv_ruleECLUnicode.current; } 
	 EOF 
;

// Rule ECLUnicode
ruleECLUnicode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UNICODE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLUnicodeAccess().getUNICODEKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLUnicodeAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLUnicodeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLUnicodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLVarunicode
entryRuleECLVarunicode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLVarunicodeRule()); }
	 iv_ruleECLVarunicode=ruleECLVarunicode 
	 { $current=$iv_ruleECLVarunicode.current; } 
	 EOF 
;

// Rule ECLVarunicode
ruleECLVarunicode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VARUNICODE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLVarunicodeAccess().getVARUNICODEKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLVarunicodeAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getECLVarunicodeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLVarunicodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLData
entryRuleECLData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLDataRule()); }
	 iv_ruleECLData=ruleECLData 
	 { $current=$iv_ruleECLData.current; } 
	 EOF 
;

// Rule ECLData
ruleECLData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DATA' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLDataAccess().getDATAKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getECLDataAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLReal
entryRuleECLReal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLRealRule()); }
	 iv_ruleECLReal=ruleECLReal 
	 { $current=$iv_ruleECLReal.current; } 
	 EOF 
;

// Rule ECLReal
ruleECLReal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='REAL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLRealAccess().getREALKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getECLRealAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getECLRealRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleECLfieldType
entryRuleECLfieldType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLfieldTypeRule()); }
	 iv_ruleECLfieldType=ruleECLfieldType 
	 { $current=$iv_ruleECLfieldType.current; } 
	 EOF 
;

// Rule ECLfieldType
ruleECLfieldType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLIntegerParserRuleCall_0()); 
    }
    this_ECLInteger_0=ruleECLInteger
    { 
        $current = $this_ECLInteger_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLQstringParserRuleCall_1()); 
    }
    this_ECLQstring_1=ruleECLQstring
    { 
        $current = $this_ECLQstring_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLStringParserRuleCall_2()); 
    }
    this_ECLString_2=ruleECLString
    { 
        $current = $this_ECLString_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLRealParserRuleCall_3()); 
    }
    this_ECLReal_3=ruleECLReal
    { 
        $current = $this_ECLReal_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLUnicodeParserRuleCall_4()); 
    }
    this_ECLUnicode_4=ruleECLUnicode
    { 
        $current = $this_ECLUnicode_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLDataParserRuleCall_5()); 
    }
    this_ECLData_5=ruleECLData
    { 
        $current = $this_ECLData_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLVarstringParserRuleCall_6()); 
    }
    this_ECLVarstring_6=ruleECLVarstring
    { 
        $current = $this_ECLVarstring_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLVarunicodeParserRuleCall_7()); 
    }
    this_ECLVarunicode_7=ruleECLVarunicode
    { 
        $current = $this_ECLVarunicode_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLUnsignedParserRuleCall_8()); 
    }
    this_ECLUnsigned_8=ruleECLUnsigned
    { 
        $current = $this_ECLUnsigned_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleECLOutputDecl
entryRuleECLOutputDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLOutputDeclRule()); }
	 iv_ruleECLOutputDecl=ruleECLOutputDecl 
	 { $current=$iv_ruleECLOutputDecl.current; } 
	 EOF 
;

// Rule ECLOutputDecl
ruleECLOutputDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getECLOutputDeclAccess().getECLfieldTypeParserRuleCall_0()); 
    }
    this_ECLfieldType_0=ruleECLfieldType
    { 
        $current = $this_ECLfieldType_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getECLOutputDeclAccess().getOptionsOutputOptionsParserRuleCall_1_0()); 
	    }
		lv_options_1_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLOutputDeclRule());
	        }
       		set(
       			$current, 
       			"options",
        		lv_options_1_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getECLOutputDeclAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleOutputOption
entryRuleOutputOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputOptionRule()); }
	 iv_ruleOutputOption=ruleOutputOption 
	 { $current=$iv_ruleOutputOption.current; } 
	 EOF 
;

// Rule OutputOption
ruleOutputOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'SIDE' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getOutputOptionAccess().getNameSIDEKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "SIDE");
	    }

)
)
    |(
(
		lv_name_1_0=	'LARGE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getOutputOptionAccess().getNameLARGEKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "LARGE");
	    }

)
)
    |(
(
		lv_name_2_0=	'SMALL' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getOutputOptionAccess().getNameSMALLKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "SMALL");
	    }

)
)
    |(
(
		lv_name_3_0=	'FEW' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getOutputOptionAccess().getNameFEWKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "FEW");
	    }

)
)
    |(
(
		lv_name_4_0=	'WUID' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getOutputOptionAccess().getNameWUIDKeyword_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "WUID");
	    }

)
))
    |((
(
		lv_name_5_0=	'FROM' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getOutputOptionAccess().getNameFROMKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "FROM");
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getOutputOptionAccess().getVarsDatatypeCrossReference_1_2_0()); 
	}

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |((
(
		lv_name_9_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_9_0, grammarAccess.getOutputOptionAccess().getNameDESCRIPTIONKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_9_0, "DESCRIPTION");
	    }

)
)	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionAccess().getValsValueParserRuleCall_2_2_0()); 
	    }
		lv_vals_11_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_11_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_2_3());
    }
))
;





// Entry rule entryRuleOutputOptions
entryRuleOutputOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputOptionsRule()); }
	 iv_ruleOutputOptions=ruleOutputOptions 
	 { $current=$iv_ruleOutputOptions.current; } 
	 EOF 
;

// Rule OutputOptions
ruleOutputOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutputOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionsAccess().getOutput_opsOutputOptionParserRuleCall_1_0()); 
	    }
		lv_output_ops_1_0=ruleOutputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionsRule());
	        }
       		add(
       			$current, 
       			"output_ops",
        		lv_output_ops_1_0, 
        		"OutputOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionsAccess().getOutput_opsOutputOptionParserRuleCall_2_1_0()); 
	    }
		lv_output_ops_3_0=ruleOutputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionsRule());
	        }
       		add(
       			$current, 
       			"output_ops",
        		lv_output_ops_3_0, 
        		"OutputOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOutType
entryRuleOutType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutTypeRule()); }
	 iv_ruleOutType=ruleOutType 
	 { $current=$iv_ruleOutType.current; } 
	 EOF 
;

// Rule OutType
ruleOutType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='BOOL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutTypeAccess().getBOOLKeyword_0_0());
    }

    |	otherlv_1='INT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutTypeAccess().getINTKeyword_0_1());
    }

    |	otherlv_2='STRING' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutTypeAccess().getSTRINGKeyword_0_2());
    }

    |	otherlv_3='ACTION' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutTypeAccess().getACTIONKeyword_0_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutTypeAccess().getValValueParserRuleCall_1_0()); 
	    }
		lv_val_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutTypeRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutDataset
entryRuleOutDataset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutDatasetRule()); }
	 iv_ruleOutDataset=ruleOutDataset 
	 { $current=$iv_ruleOutDataset.current; } 
	 EOF 
;

// Rule OutDataset
ruleOutDataset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DATASET' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutDatasetAccess().getDATASETKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOutDatasetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutDatasetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutDatasetAccess().getOut_baseOutputBaseParserRuleCall_2_0()); 
	    }
		lv_out_base_2_0=ruleOutputBase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutDatasetRule());
	        }
       		set(
       			$current, 
       			"out_base",
        		lv_out_base_2_0, 
        		"OutputBase");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutDatasetAccess().getOpsOutputOptionsParserRuleCall_3_0()); 
	    }
		lv_ops_3_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutDatasetRule());
	        }
       		add(
       			$current, 
       			"ops",
        		lv_ops_3_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOutputValue
entryRuleOutputValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputValueRule()); }
	 iv_ruleOutputValue=ruleOutputValue 
	 { $current=$iv_ruleOutputValue.current; } 
	 EOF 
;

// Rule OutputValue
ruleOutputValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getOutTypeParserRuleCall_0_0()); 
    }
    this_OutType_0=ruleOutType
    { 
        $current = $this_OutType_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputValueAccess().getOpsOutputOptionsParserRuleCall_0_1_0()); 
	    }
		lv_ops_1_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputValueRule());
	        }
       		set(
       			$current, 
       			"ops",
        		lv_ops_1_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputValueAccess().getSemicolonKeyword_0_2());
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getOutDatasetParserRuleCall_1_0()); 
    }
    this_OutDataset_3=ruleOutDataset
    { 
        $current = $this_OutDataset_3.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputValueAccess().getEcl_varsECLOutputDeclParserRuleCall_1_1_0()); 
	    }
		lv_ecl_vars_4_0=ruleECLOutputDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputValueRule());
	        }
       		add(
       			$current, 
       			"ecl_vars",
        		lv_ecl_vars_4_0, 
        		"ECLOutputDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_5='END' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOutputValueAccess().getENDKeyword_1_2());
    }
))
    |(
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getOutDatasetParserRuleCall_2_0()); 
    }
    this_OutDataset_6=ruleOutDataset
    { 
        $current = $this_OutDataset_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutputValueAccess().getSemicolonKeyword_2_1());
    }
))
;





// Entry rule entryRuleOutputBase
entryRuleOutputBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputBaseRule()); }
	 iv_ruleOutputBase=ruleOutputBase 
	 { $current=$iv_ruleOutputBase.current; } 
	 EOF 
;

// Rule OutputBase
ruleOutputBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutputBaseAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputBaseRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getOutputBaseAccess().getBaseDatatypeCrossReference_1_0()); 
	}

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputBaseAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleGenerateSection
entryRuleGenerateSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateSectionRule()); }
	 iv_ruleGenerateSection=ruleGenerateSection 
	 { $current=$iv_ruleGenerateSection.current; } 
	 EOF 
;

// Rule GenerateSection
ruleGenerateSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGenerateSectionAccess().getGenerateBodyInlineParserRuleCall_0()); 
    }
    this_GenerateBodyInline_0=ruleGenerateBodyInline
    { 
        $current = $this_GenerateBodyInline_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGenerateSectionAccess().getGenerateBodySaltParserRuleCall_1()); 
    }
    this_GenerateBodySalt_1=ruleGenerateBodySalt
    { 
        $current = $this_GenerateBodySalt_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGenerateBodyInline
entryRuleGenerateBodyInline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateBodyInlineRule()); }
	 iv_ruleGenerateBodyInline=ruleGenerateBodyInline 
	 { $current=$iv_ruleGenerateBodyInline.current; } 
	 EOF 
;

// Rule GenerateBodyInline
ruleGenerateBodyInline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'GENERATES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getGenerateBodyInlineAccess().getNameGENERATESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenerateBodyInlineRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "GENERATES");
	    }

)
)this_GEN_BLOCK_1=RULE_GEN_BLOCK
    { 
    newLeafNode(this_GEN_BLOCK_1, grammarAccess.getGenerateBodyInlineAccess().getGEN_BLOCKTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleGenerateBodySalt
entryRuleGenerateBodySalt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateBodySaltRule()); }
	 iv_ruleGenerateBodySalt=ruleGenerateBodySalt 
	 { $current=$iv_ruleGenerateBodySalt.current; } 
	 EOF 
;

// Rule GenerateBodySalt
ruleGenerateBodySalt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'GENERATES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getGenerateBodySaltAccess().getNameGENERATESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenerateBodySaltRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "GENERATES");
	    }

)
)	otherlv_1='SALT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGenerateBodySaltAccess().getSALTKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGenerateBodySaltAccess().getLeftParenthesisKeyword_2());
    }
this_ID_3=RULE_ID
    { 
    newLeafNode(this_ID_3, grammarAccess.getGenerateBodySaltAccess().getIDTerminalRuleCall_3()); 
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGenerateBodySaltAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGenerateBodySaltAccess().getColonKeyword_5());
    }
(	otherlv_6='SCOREDSEARCH' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGenerateBodySaltAccess().getSCOREDSEARCHKeyword_6_0());
    }

    |	otherlv_7='PROFILE' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGenerateBodySaltAccess().getPROFILEKeyword_6_1());
    }
)((	'ENDGENERATES' 
)=>	otherlv_8='ENDGENERATES' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGenerateBodySaltAccess().getENDGENERATESKeyword_7());
    }
))
;





// Entry rule entryRuleVisualSection
entryRuleVisualSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualSectionRule()); }
	 iv_ruleVisualSection=ruleVisualSection 
	 { $current=$iv_ruleVisualSection.current; } 
	 EOF 
;

// Rule VisualSection
ruleVisualSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sec_name_0_0=	'VISUALIZE' 
    {
        newLeafNode(lv_sec_name_0_0, grammarAccess.getVisualSectionAccess().getSec_nameVISUALIZEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionRule());
	        }
       		setWithLastConsumed($current, "sec_name", lv_sec_name_0_0, "VISUALIZE");
	    }

)
)this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getVisualSectionAccess().getIDTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionAccess().getVis_opsVisualSectionOptionsParserRuleCall_2_0()); 
	    }
		lv_vis_ops_2_0=ruleVisualSectionOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionRule());
	        }
       		set(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_2_0, 
        		"VisualSectionOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionAccess().getVis_elementsVisualizationParserRuleCall_3_0()); 
	    }
		lv_vis_elements_3_0=ruleVisualization		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionRule());
	        }
       		add(
       			$current, 
       			"vis_elements",
        		lv_vis_elements_3_0, 
        		"Visualization");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_4='END' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisualSectionAccess().getENDKeyword_4());
    }
))
;





// Entry rule entryRuleVisualization
entryRuleVisualization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualizationRule()); }
	 iv_ruleVisualization=ruleVisualization 
	 { $current=$iv_ruleVisualization.current; } 
	 EOF 
;

// Rule Visualization
ruleVisualization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='CHORO' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisualizationAccess().getCHOROKeyword_0_0_0());
    }

    |	otherlv_1='LINE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVisualizationAccess().getLINEKeyword_0_0_1());
    }

    |	otherlv_2='TIMELINE' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisualizationAccess().getTIMELINEKeyword_0_0_2());
    }

    |	otherlv_3='PIE' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVisualizationAccess().getPIEKeyword_0_0_3());
    }

    |	otherlv_4='BAR' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisualizationAccess().getBARKeyword_0_0_4());
    }

    |	otherlv_5='TABLE' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVisualizationAccess().getTABLEKeyword_0_0_5());
    }
)(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getVisualizationAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualizationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVisualizationAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getInputVisBasisParserRuleCall_0_3_0()); 
	    }
		lv_input_8_0=ruleVisBasis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"input",
        		lv_input_8_0, 
        		"VisBasis");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVisualizationAccess().getRightParenthesisKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getVis_opVisualOptionsParserRuleCall_0_5_0()); 
	    }
		lv_vis_op_10_0=ruleVisualOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"vis_op",
        		lv_vis_op_10_0, 
        		"VisualOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVisualizationAccess().getSemicolonKeyword_0_6());
    }
)
    |(	otherlv_12='SLIDER' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVisualizationAccess().getSLIDERKeyword_1_0());
    }
(
(
		lv_name_13_0=RULE_ID
		{
			newLeafNode(lv_name_13_0, grammarAccess.getVisualizationAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualizationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_13_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getVis_opVisualOptionsParserRuleCall_1_2_0()); 
	    }
		lv_vis_op_14_0=ruleVisualOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"vis_op",
        		lv_vis_op_14_0, 
        		"VisualOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getVisualizationAccess().getSemicolonKeyword_1_3());
    }
))
;





// Entry rule entryRuleVisBasis
entryRuleVisBasis returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisBasisRule()); }
	 iv_ruleVisBasis=ruleVisBasis 
	 { $current=$iv_ruleVisBasis.current; } 
	 EOF 
;

// Rule VisBasis
ruleVisBasis returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisBasisRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getVisBasisAccess().getBasisOutDatasetCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisAccess().getQualsVisBasisQualifiersParserRuleCall_1_0()); 
	    }
		lv_quals_1_0=ruleVisBasisQualifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisRule());
	        }
       		set(
       			$current, 
       			"quals",
        		lv_quals_1_0, 
        		"VisBasisQualifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleVisBasisQualifiers
entryRuleVisBasisQualifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisBasisQualifiersRule()); }
	 iv_ruleVisBasisQualifiers=ruleVisBasisQualifiers 
	 { $current=$iv_ruleVisBasisQualifiers.current; } 
	 EOF 
;

// Rule VisBasisQualifiers
ruleVisBasisQualifiers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisBasisQualifiersAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisQualifiersAccess().getFuncsFunctionParserRuleCall_1_0()); 
	    }
		lv_funcs_1_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisQualifiersRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_1_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisBasisQualifiersAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisQualifiersAccess().getFuncsFunctionParserRuleCall_2_1_0()); 
	    }
		lv_funcs_3_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisQualifiersRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_3_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisBasisQualifiersAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getVarsPosVizDataCrossReference_0_0()); 
	}

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getValsValueParserRuleCall_1_0()); 
	    }
		lv_vals_1_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_1_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_2='SUM' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getSUMKeyword_2_0());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getVarsPosVizDataCrossReference_2_2_0_0()); 
	}

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getValsValueParserRuleCall_2_2_1_0()); 
	    }
		lv_vals_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_2_3());
    }
)
    |(	otherlv_7='SCALE' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getSCALEKeyword_3_0());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getVarsPosVizDataCrossReference_3_2_0_0()); 
	}

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getValsValueParserRuleCall_3_2_1_0()); 
	    }
		lv_vals_10_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_10_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFunctionAccess().getCommaKeyword_3_3());
    }
this_INT_12=RULE_INT
    { 
    newLeafNode(this_INT_12, grammarAccess.getFunctionAccess().getINTTerminalRuleCall_3_4()); 
    }
	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3_5());
    }
))
;





// Entry rule entryRuleVisualSectionOptions
entryRuleVisualSectionOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualSectionOptionsRule()); }
	 iv_ruleVisualSectionOptions=ruleVisualSectionOptions 
	 { $current=$iv_ruleVisualSectionOptions.current; } 
	 EOF 
;

// Rule VisualSectionOptions
ruleVisualSectionOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisualSectionOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionsAccess().getVis_opsVisualSectionOptionParserRuleCall_1_0()); 
	    }
		lv_vis_ops_1_0=ruleVisualSectionOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_1_0, 
        		"VisualSectionOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisualSectionOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionsAccess().getVis_opsVisualSectionOptionParserRuleCall_2_1_0()); 
	    }
		lv_vis_ops_3_0=ruleVisualSectionOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_3_0, 
        		"VisualSectionOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleVisualSectionOption
entryRuleVisualSectionOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualSectionOptionRule()); }
	 iv_ruleVisualSectionOption=ruleVisualSectionOption 
	 { $current=$iv_ruleVisualSectionOption.current; } 
	 EOF 
;

// Rule VisualSectionOption
ruleVisualSectionOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'LABEL' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisualSectionOptionAccess().getNameLABELKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "LABEL");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVisualSectionOptionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionAccess().getValsValueParserRuleCall_2_0()); 
	    }
		lv_vals_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVisualSectionOptionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleVisualOptions
entryRuleVisualOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualOptionsRule()); }
	 iv_ruleVisualOptions=ruleVisualOptions 
	 { $current=$iv_ruleVisualOptions.current; } 
	 EOF 
;

// Rule VisualOptions
ruleVisualOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisualOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionsAccess().getVis_opsVisualOptionParserRuleCall_1_0()); 
	    }
		lv_vis_ops_1_0=ruleVisualOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_1_0, 
        		"VisualOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisualOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionsAccess().getVis_opsVisualOptionParserRuleCall_2_1_0()); 
	    }
		lv_vis_ops_3_0=ruleVisualOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_3_0, 
        		"VisualOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleVisualOption
entryRuleVisualOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualOptionRule()); }
	 iv_ruleVisualOption=ruleVisualOption 
	 { $current=$iv_ruleVisualOption.current; } 
	 EOF 
;

// Rule VisualOption
ruleVisualOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'TITLE' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisualOptionAccess().getNameTITLEKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "TITLE");
	    }

)
)
    |(
(
		lv_name_1_0=	'DATE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVisualOptionAccess().getNameDATEKeyword_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "DATE");
	    }

)
)
    |(
(
		lv_name_2_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getVisualOptionAccess().getNameDESCRIPTIONKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_name_3_0=	'PICTURE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getVisualOptionAccess().getNamePICTUREKeyword_0_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "PICTURE");
	    }

)
)
    |(
(
		lv_name_4_0=	'STATE' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getVisualOptionAccess().getNameSTATEKeyword_0_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "STATE");
	    }

)
)
    |(
(
		lv_name_5_0=	'COUNTY' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getVisualOptionAccess().getNameCOUNTYKeyword_0_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "COUNTY");
	    }

)
)
    |(
(
		lv_name_6_0=	'WEIGHT' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getVisualOptionAccess().getNameWEIGHTKeyword_0_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "WEIGHT");
	    }

)
)
    |(
(
		lv_name_7_0=	'SIZE' 
    {
        newLeafNode(lv_name_7_0, grammarAccess.getVisualOptionAccess().getNameSIZEKeyword_0_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_7_0, "SIZE");
	    }

)
))	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_0_2_0()); 
	    }
		lv_funcs_9_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_9_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_0_3());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getVis_multVisualMultivalParserRuleCall_1_0_0()); 
	    }
		lv_vis_mult_11_0=ruleVisualMultival		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		set(
       			$current, 
       			"vis_mult",
        		lv_vis_mult_11_0, 
        		"VisualMultival");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='(' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_1_2_0()); 
	    }
		lv_funcs_13_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_13_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVisualOptionAccess().getCommaKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_1_3_1_0()); 
	    }
		lv_funcs_15_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_15_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_1_4());
    }
)
    |((
(
		lv_name_17_0=	'SELECTS' 
    {
        newLeafNode(lv_name_17_0, grammarAccess.getVisualOptionAccess().getNameSELECTSKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_17_0, "SELECTS");
	    }

)
)	otherlv_18='(' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_2_1());
    }
this_ID_19=RULE_ID
    { 
    newLeafNode(this_ID_19, grammarAccess.getVisualOptionAccess().getIDTerminalRuleCall_2_2()); 
    }
	otherlv_20='->' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getVisualOptionAccess().getHyphenMinusGreaterThanSignKeyword_2_3());
    }
this_ID_21=RULE_ID
    { 
    newLeafNode(this_ID_21, grammarAccess.getVisualOptionAccess().getIDTerminalRuleCall_2_4()); 
    }
	otherlv_22=')' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_2_5());
    }
))
;





// Entry rule entryRuleVisualMultival
entryRuleVisualMultival returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualMultivalRule()); }
	 iv_ruleVisualMultival=ruleVisualMultival 
	 { $current=$iv_ruleVisualMultival.current; } 
	 EOF 
;

// Rule VisualMultival
ruleVisualMultival returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'X' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisualMultivalAccess().getNameXKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "X");
	    }

)
)
    |(
(
		lv_name_1_0=	'Y' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVisualMultivalAccess().getNameYKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "Y");
	    }

)
)
    |(
(
		lv_name_2_0=	'COLOR' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getVisualMultivalAccess().getNameCOLORKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "COLOR");
	    }

)
)
    |(
(
		lv_name_3_0=	'RANGE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getVisualMultivalAccess().getNameRANGEKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "RANGE");
	    }

)
)
    |(
(
		lv_name_4_0=	'FILTER' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getVisualMultivalAccess().getNameFILTERKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "FILTER");
	    }

)
)
    |(
(
		lv_name_5_0=	'LABEL' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getVisualMultivalAccess().getNameLABELKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "LABEL");
	    }

)
)
    |(
(
		lv_name_6_0=	'VALUE' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getVisualMultivalAccess().getNameVALUEKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "VALUE");
	    }

)
))
;





// Entry rule entryRuleCustomSection
entryRuleCustomSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomSectionRule()); }
	 iv_ruleCustomSection=ruleCustomSection 
	 { $current=$iv_ruleCustomSection.current; } 
	 EOF 
;

// Rule CustomSection
ruleCustomSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'CUSTOM' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCustomSectionAccess().getNameCUSTOMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "CUSTOM");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomSectionAccess().getCust_valsCustomValueParserRuleCall_1_0()); 
	    }
		lv_cust_vals_1_0=ruleCustomValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomSectionRule());
	        }
       		add(
       			$current, 
       			"cust_vals",
        		lv_cust_vals_1_0, 
        		"CustomValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomSectionAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleCustomValue
entryRuleCustomValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomValueRule()); }
	 iv_ruleCustomValue=ruleCustomValue 
	 { $current=$iv_ruleCustomValue.current; } 
	 EOF 
;

// Rule CustomValue
ruleCustomValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_ID_0=RULE_ID
    { 
    newLeafNode(this_ID_0, grammarAccess.getCustomValueAccess().getIDTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCustomValueAccess().getValueParserRuleCall_1()); 
    }
    this_Value_1=ruleValue
    { 
        $current = $this_Value_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomValueAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleResourceOption
entryRuleResourceOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceOptionRule()); }
	 iv_ruleResourceOption=ruleResourceOption 
	 { $current=$iv_ruleResourceOption.current; } 
	 EOF 
;

// Rule ResourceOption
ruleResourceOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getResourceOptionAccess().getNameDESCRIPTIONKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_name_1_0=	'FILE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getResourceOptionAccess().getNameFILEKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "FILE");
	    }

)
)
    |(
(
		lv_name_2_0=	'LABEL' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getResourceOptionAccess().getNameLABELKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "LABEL");
	    }

)
)
    |(
(
		lv_name_3_0=	'_HTML_STYLECLASS' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getResourceOptionAccess().getName_HTML_STYLECLASSKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "_HTML_STYLECLASS");
	    }

)
))	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceOptionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceOptionAccess().getValsValueParserRuleCall_2_0()); 
	    }
		lv_vals_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResourceOptionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleResourceOptions
entryRuleResourceOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceOptionsRule()); }
	 iv_ruleResourceOptions=ruleResourceOptions 
	 { $current=$iv_ruleResourceOptions.current; } 
	 EOF 
;

// Rule ResourceOptions
ruleResourceOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getResourceOptionsAccess().getRes_opsResourceOptionParserRuleCall_0_0()); 
	    }
		lv_res_ops_0_0=ruleResourceOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceOptionsRule());
	        }
       		add(
       			$current, 
       			"res_ops",
        		lv_res_ops_0_0, 
        		"ResourceOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceOptionsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceOptionsAccess().getRes_opsResourceOptionParserRuleCall_1_1_0()); 
	    }
		lv_res_ops_2_0=ruleResourceOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceOptionsRule());
	        }
       		add(
       			$current, 
       			"res_ops",
        		lv_res_ops_2_0, 
        		"ResourceOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleResourceValue
entryRuleResourceValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceValueRule()); }
	 iv_ruleResourceValue=ruleResourceValue 
	 { $current=$iv_ruleResourceValue.current; } 
	 EOF 
;

// Rule ResourceValue
ruleResourceValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getResourceValueAccess().getValueParserRuleCall_0()); 
    }
    this_Value_0=ruleValue
    { 
        $current = $this_Value_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceValueAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceValueAccess().getRes_opsResourceOptionsParserRuleCall_2_0()); 
	    }
		lv_res_ops_2_0=ruleResourceOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceValueRule());
	        }
       		set(
       			$current, 
       			"res_ops",
        		lv_res_ops_2_0, 
        		"ResourceOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getResourceValueAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleResourceSection
entryRuleResourceSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceSectionRule()); }
	 iv_ruleResourceSection=ruleResourceSection 
	 { $current=$iv_ruleResourceSection.current; } 
	 EOF 
;

// Rule ResourceSection
ruleResourceSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'RESOURCES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getResourceSectionAccess().getNameRESOURCESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "RESOURCES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceSectionAccess().getRes_valsResourceValueParserRuleCall_1_0()); 
	    }
		lv_res_vals_1_0=ruleResourceValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceSectionRule());
	        }
       		add(
       			$current, 
       			"res_vals",
        		lv_res_vals_1_0, 
        		"ResourceValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceSectionAccess().getENDKeyword_2());
    }
))
;





RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_GEN_BLOCK : 'INLINE' ( options {greedy=false;} : . )*'ENDGENERATES';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


