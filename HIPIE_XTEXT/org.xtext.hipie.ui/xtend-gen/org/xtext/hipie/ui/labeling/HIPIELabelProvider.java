/**
 * generated by Xtext
 */
package org.xtext.hipie.ui.labeling;

import com.google.common.base.Objects;
import com.google.inject.Inject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.xtext.hipie.hIPIE.ContractInstance;
import org.xtext.hipie.hIPIE.Value;
import org.xtext.hipie.hIPIE.VisualSection;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
@SuppressWarnings("all")
public class HIPIELabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public HIPIELabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final Value v) {
    String _xifexpression = null;
    String _name = v.getName();
    boolean _equals = Objects.equal(_name, null);
    if (_equals) {
      String _xifexpression_1 = null;
      String _str_val = v.getStr_val();
      boolean _notEquals = (!Objects.equal(_str_val, null));
      if (_notEquals) {
        String _str_val_1 = v.getStr_val();
        _xifexpression_1 = ("STRING : " + _str_val_1);
      } else {
        int _int_val = v.getInt_val();
        _xifexpression_1 = ("INT : " + Integer.valueOf(_int_val));
      }
      _xifexpression = _xifexpression_1;
    }
    return _xifexpression;
  }
  
  public String text(final VisualSection v) {
    return v.getSec_name();
  }
  
  public String text(final ContractInstance v) {
    return v.getSec_name();
  }
}
